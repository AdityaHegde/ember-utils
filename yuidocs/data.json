{
    "project": {
        "name": "Ember Utils",
        "description": "A utility module for ember apps."
    },
    "files": {
        "src/js/array-modifier/array-modifier-groups/arrayFilterGroup.js": {
            "name": "src/js/array-modifier/array-modifier-groups/arrayFilterGroup.js",
            "modules": {},
            "classes": {
                "ArrayMod.ArrayFilterGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/array-modifier/array-modifier-groups/arrayModGroup.js": {
            "name": "src/js/array-modifier/array-modifier-groups/arrayModGroup.js",
            "modules": {},
            "classes": {
                "ArrayMod.ArrayModGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/array-modifier/array-modifier-groups/arraySortGroup.js": {
            "name": "src/js/array-modifier/array-modifier-groups/arraySortGroup.js",
            "modules": {},
            "classes": {
                "ArrayMod.ArraySortGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/array-modifier/array-modifier-groups/main.js": {
            "name": "src/js/array-modifier/array-modifier-groups/main.js",
            "modules": {
                "array-modifier-groups": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/array-modifier/array-modifier-types/arrayFilterModifier.js": {
            "name": "src/js/array-modifier/array-modifier-types/arrayFilterModifier.js",
            "modules": {},
            "classes": {
                "ArrayMod.ArrayFilterModifier": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/array-modifier/array-modifier-types/arrayModifier.js": {
            "name": "src/js/array-modifier/array-modifier-types/arrayModifier.js",
            "modules": {},
            "classes": {
                "ArrayMod.ArrayModifier": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/array-modifier/array-modifier-types/arraySearchModifier.js": {
            "name": "src/js/array-modifier/array-modifier-types/arraySearchModifier.js",
            "modules": {},
            "classes": {
                "ArrayMod.ArraySearchModifier": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/array-modifier/array-modifier-types/arraySortModifier.js": {
            "name": "src/js/array-modifier/array-modifier-types/arraySortModifier.js",
            "modules": {},
            "classes": {
                "ArrayMod.ArraySortModifier": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/array-modifier/array-modifier-types/arrayTagObjectModifier.js": {
            "name": "src/js/array-modifier/array-modifier-types/arrayTagObjectModifier.js",
            "modules": {},
            "classes": {
                "ArrayMod.TagObject": 1,
                "ArrayMod.ArrayTagSearchModifier": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/array-modifier/array-modifier-types/main.js": {
            "name": "src/js/array-modifier/array-modifier-types/main.js",
            "modules": {
                "array-modifier-types": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/array-modifier/arrayModController.js": {
            "name": "src/js/array-modifier/arrayModController.js",
            "modules": {},
            "classes": {
                "ArrayMod.ArrayModController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/array-modifier/main.js": {
            "name": "src/js/array-modifier/main.js",
            "modules": {
                "array-modifier": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/column-data/utils/columnDataChangeCollectorMixin.js": {
            "name": "src/js/column-data/utils/columnDataChangeCollectorMixin.js",
            "modules": {},
            "classes": {
                "ColumnDataChangeCollectorMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/column-data/utils/columnDataValueMixin.js": {
            "name": "src/js/column-data/utils/columnDataValueMixin.js",
            "modules": {},
            "classes": {
                "ColumnDataValueMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/column-data/utils/main.js": {
            "name": "src/js/column-data/utils/main.js",
            "modules": {
                "column-data-utils": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/column-data/validations/columnDataValidation.js": {
            "name": "src/js/column-data/validations/columnDataValidation.js",
            "modules": {},
            "classes": {
                "ColumnDataValidation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/column-data/validations/csvDuplicateValidation.js": {
            "name": "src/js/column-data/validations/csvDuplicateValidation.js",
            "modules": {},
            "classes": {
                "CSVDuplicateValidation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/column-data/validations/csvRegexValidation.js": {
            "name": "src/js/column-data/validations/csvRegexValidation.js",
            "modules": {},
            "classes": {
                "CSVRegexValidation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/column-data/validations/duplicateAcrossRecordsValidation.js": {
            "name": "src/js/column-data/validations/duplicateAcrossRecordsValidation.js",
            "modules": {},
            "classes": {
                "DuplicateAcrossRecordsValidation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/column-data/validations/emptyValidation.js": {
            "name": "src/js/column-data/validations/emptyValidation.js",
            "modules": {},
            "classes": {
                "EmptyValidation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/column-data/validations/main.js": {
            "name": "src/js/column-data/validations/main.js",
            "modules": {
                "column-data-validation": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/column-data/validations/numberRangeValidation.js": {
            "name": "src/js/column-data/validations/numberRangeValidation.js",
            "modules": {},
            "classes": {
                "NumberRangeValidation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/column-data/validations/regexValidation.js": {
            "name": "src/js/column-data/validations/regexValidation.js",
            "modules": {},
            "classes": {
                "RegexValidation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/column-data/columnData.js": {
            "name": "src/js/column-data/columnData.js",
            "modules": {},
            "classes": {
                "ColumnData.ColumnData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/column-data/columnDataGroup.js": {
            "name": "src/js/column-data/columnDataGroup.js",
            "modules": {},
            "classes": {
                "ColumnData.ColumnDataGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/column-data/columnListenerEntry.js": {
            "name": "src/js/column-data/columnListenerEntry.js",
            "modules": {},
            "classes": {
                "ColumnListenerEntry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/column-data/main.js": {
            "name": "src/js/column-data/main.js",
            "modules": {
                "column-data": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/crud-adapter/applicationAdapter.js": {
            "name": "src/js/crud-adapter/applicationAdapter.js",
            "modules": {},
            "classes": {
                "APIConfig": 1,
                "ApplicationAdapter": 1
            },
            "fors": {
                "CrudAdapter": 1,
                "APIConfig": 1
            },
            "namespaces": {}
        },
        "src/js/crud-adapter/applicationSerializer.js": {
            "name": "src/js/crud-adapter/applicationSerializer.js",
            "modules": {},
            "classes": {
                "ApplicationSerializer": 1
            },
            "fors": {
                "CrudAdapter": 1
            },
            "namespaces": {}
        },
        "src/js/crud-adapter/backupData.js": {
            "name": "src/js/crud-adapter/backupData.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CrudAdaptor": 1
            },
            "namespaces": {}
        },
        "src/js/crud-adapter/createRecordWrapper.js": {
            "name": "src/js/crud-adapter/createRecordWrapper.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CrudAdapter": 1
            },
            "namespaces": {}
        },
        "src/js/crud-adapter/delayedAddToHasManyMixin.js": {
            "name": "src/js/crud-adapter/delayedAddToHasManyMixin.js",
            "modules": {},
            "classes": {
                "DelayedAddToHasManyMixin": 1
            },
            "fors": {
                "CrudAdapter": 1
            },
            "namespaces": {}
        },
        "src/js/crud-adapter/forceReload.js": {
            "name": "src/js/crud-adapter/forceReload.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CrudAdapter": 1
            },
            "namespaces": {}
        },
        "src/js/crud-adapter/getId.js": {
            "name": "src/js/crud-adapter/getId.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CrudAdapter": 1
            },
            "namespaces": {}
        },
        "src/js/crud-adapter/main.js": {
            "name": "src/js/crud-adapter/main.js",
            "modules": {
                "crud-adapter": 1
            },
            "classes": {
                "CrudAdapter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/crud-adapter/model-wrapper.js": {
            "name": "src/js/crud-adapter/model-wrapper.js",
            "modules": {},
            "classes": {
                "ModelWrapper": 1
            },
            "fors": {
                "CrudAdapter": 1,
                "ModelWrapper": 1
            },
            "namespaces": {}
        },
        "src/js/crud-adapter/retrieveBackup.js": {
            "name": "src/js/crud-adapter/retrieveBackup.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CrudAdaptor": 1
            },
            "namespaces": {}
        },
        "src/js/crud-adapter/retrieveFailure.js": {
            "name": "src/js/crud-adapter/retrieveFailure.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CrudAdapter": 1
            },
            "namespaces": {}
        },
        "src/js/crud-adapter/rollbackRecord.js": {
            "name": "src/js/crud-adapter/rollbackRecord.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CrudAdapter": 1
            },
            "namespaces": {}
        },
        "src/js/crud-adapter/saveRecord.js": {
            "name": "src/js/crud-adapter/saveRecord.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CrudAdapter": 1
            },
            "namespaces": {}
        },
        "src/js/drag-drop/drag-drop-column-data-interface.js": {
            "name": "src/js/drag-drop/drag-drop-column-data-interface.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/drag-drop/draggableMixin.js": {
            "name": "src/js/drag-drop/draggableMixin.js",
            "modules": {},
            "classes": {
                "DragDrop.DraggableMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/drag-drop/droppableMixin.js": {
            "name": "src/js/drag-drop/droppableMixin.js",
            "modules": {},
            "classes": {
                "DragDrop.DroppableMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/drag-drop/main.js": {
            "name": "src/js/drag-drop/main.js",
            "modules": {
                "drag-drop": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/drag-drop/sortableDraggableMixin.js": {
            "name": "src/js/drag-drop/sortableDraggableMixin.js",
            "modules": {},
            "classes": {
                "DragDrop.SortableDraggableMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/drag-drop/sortableDroppableMixin.js": {
            "name": "src/js/drag-drop/sortableDroppableMixin.js",
            "modules": {},
            "classes": {
                "DragDrop.SortableDroppableMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/drag-drop/sortablePlaceholderMixin.js": {
            "name": "src/js/drag-drop/sortablePlaceholderMixin.js",
            "modules": {},
            "classes": {
                "DragDrop.SortablePlaceholderMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-column-data/formColumnData.js": {
            "name": "src/js/form/form-column-data/formColumnData.js",
            "modules": {},
            "classes": {
                "Form.DisableForCol": 1,
                "Form.FormColumnData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-column-data/formColumnDataGroup.js": {
            "name": "src/js/form/form-column-data/formColumnDataGroup.js",
            "modules": {},
            "classes": {
                "Form.FormColumnDataGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-column-data/main.js": {
            "name": "src/js/form/form-column-data/main.js",
            "modules": {
                "form-column-data": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/checkBoxView.js": {
            "name": "src/js/form/form-items/checkBoxView.js",
            "modules": {},
            "classes": {
                "Form.CheckBoxView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/csvDataInputView.js": {
            "name": "src/js/form/form-items/csvDataInputView.js",
            "modules": {},
            "classes": {
                "Form.CSVDataInputView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/dynamicMultiSelectView.js": {
            "name": "src/js/form/form-items/dynamicMultiSelectView.js",
            "modules": {},
            "classes": {
                "Form.DynamicMultiSelectView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/dynamicSelectView.js": {
            "name": "src/js/form/form-items/dynamicSelectView.js",
            "modules": {},
            "classes": {
                "Form.DynamicSelectView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/fileUploadView.js": {
            "name": "src/js/form/form-items/fileUploadView.js",
            "modules": {},
            "classes": {
                "Form.FileUploadView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/groupCheckBoxView.js": {
            "name": "src/js/form/form-items/groupCheckBoxView.js",
            "modules": {},
            "classes": {
                "Form.GroupCheckBoxView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/groupRadioButtonView.js": {
            "name": "src/js/form/form-items/groupRadioButtonView.js",
            "modules": {},
            "classes": {
                "Form.GroupRadioButtonView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/imageUploadView.js": {
            "name": "src/js/form/form-items/imageUploadView.js",
            "modules": {},
            "classes": {
                "Form.ImageUploadView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/labelView.js": {
            "name": "src/js/form/form-items/labelView.js",
            "modules": {},
            "classes": {
                "Form.LabelView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/legendView.js": {
            "name": "src/js/form/form-items/legendView.js",
            "modules": {},
            "classes": {
                "Form.Legend": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/main.js": {
            "name": "src/js/form/form-items/main.js",
            "modules": {
                "form-items": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/multiEntryView.js": {
            "name": "src/js/form/form-items/multiEntryView.js",
            "modules": {},
            "classes": {
                "Form.MultiEntryView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/multiInputView.js": {
            "name": "src/js/form/form-items/multiInputView.js",
            "modules": {},
            "classes": {
                "Form.MultiInputView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/multipleValue.js": {
            "name": "src/js/form/form-items/multipleValue.js",
            "modules": {},
            "classes": {
                "Form.MultipleValue": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/multipleValueMixin.js": {
            "name": "src/js/form/form-items/multipleValueMixin.js",
            "modules": {},
            "classes": {
                "Form.MultipleValueMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/radioInputView.js": {
            "name": "src/js/form/form-items/radioInputView.js",
            "modules": {},
            "classes": {
                "Form.RadioInputView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/staticSelectView.js": {
            "name": "src/js/form/form-items/staticSelectView.js",
            "modules": {},
            "classes": {
                "Form.StaticSelectView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/textAreaView.js": {
            "name": "src/js/form/form-items/textAreaView.js",
            "modules": {},
            "classes": {
                "Form.TextAreaView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/textInputView.js": {
            "name": "src/js/form/form-items/textInputView.js",
            "modules": {},
            "classes": {
                "Form.TextInputView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/form-items/wrapperView.js": {
            "name": "src/js/form/form-items/wrapperView.js",
            "modules": {},
            "classes": {
                "Form.WrapperView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/formView.js": {
            "name": "src/js/form/formView.js",
            "modules": {},
            "classes": {
                "FormView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/main.js": {
            "name": "src/js/form/main.js",
            "modules": {
                "form": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/form/multiColumnMixin.js": {
            "name": "src/js/form/multiColumnMixin.js",
            "modules": {},
            "classes": {
                "MultiColumnMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/global-module/global-module-column-data/displayTextCollapsibleColumnDataMixin.js": {
            "name": "src/js/global-module/global-module-column-data/displayTextCollapsibleColumnDataMixin.js",
            "modules": {},
            "classes": {
                "GlobalModules.DisplayTextCollapsibleColumnDataMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/global-module/global-module-column-data/displayTextCollapsibleGlypiconColumnDataMixin.js": {
            "name": "src/js/global-module/global-module-column-data/displayTextCollapsibleGlypiconColumnDataMixin.js",
            "modules": {},
            "classes": {
                "GlobalModules.DisplayTextCollapsibleGlypiconColumnDataMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/global-module/global-module-column-data/displayTextColumnDataMixin.js": {
            "name": "src/js/global-module/global-module-column-data/displayTextColumnDataMixin.js",
            "modules": {},
            "classes": {
                "GlobalModules.DisplayTextColumnDataMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/global-module/global-module-column-data/displayTextWithTooltipColumnDataMixin.js": {
            "name": "src/js/global-module/global-module-column-data/displayTextWithTooltipColumnDataMixin.js",
            "modules": {},
            "classes": {
                "GlobalModules.DisplayTextWithTooltipColumnDataMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/global-module/global-module-column-data/globalModuleColumnDataGroupMixin.js": {
            "name": "src/js/global-module/global-module-column-data/globalModuleColumnDataGroupMixin.js",
            "modules": {},
            "classes": {
                "GlobalModules.GlobalModuleColumnDataGroupMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/global-module/global-module-column-data/main.js": {
            "name": "src/js/global-module/global-module-column-data/main.js",
            "modules": {
                "global-module-column-data": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/global-module/global-module-view/displayTextCollapsibleGlypiconView.js": {
            "name": "src/js/global-module/global-module-view/displayTextCollapsibleGlypiconView.js",
            "modules": {},
            "classes": {
                "GlobalModules.DisplayTextCollapsibleGlypiconView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/global-module/global-module-view/displayTextCollapsibleView.js": {
            "name": "src/js/global-module/global-module-view/displayTextCollapsibleView.js",
            "modules": {},
            "classes": {
                "GlobalModules.DisplayTextCollapsibleView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/global-module/global-module-view/displayTextView.js": {
            "name": "src/js/global-module/global-module-view/displayTextView.js",
            "modules": {},
            "classes": {
                "GlobalModules.DisplayTextView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/global-module/global-module-view/displayTextWithTooltipView.js": {
            "name": "src/js/global-module/global-module-view/displayTextWithTooltipView.js",
            "modules": {},
            "classes": {
                "GlobalModules.DisplayTextWithTooltipView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/global-module/global-module-view/main.js": {
            "name": "src/js/global-module/global-module-view/main.js",
            "modules": {
                "global-module-view": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/global-module/main.js": {
            "name": "src/js/global-module/main.js",
            "modules": {
                "global-module": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/lazy-display/lazyDisplayColumnDataGroup.js": {
            "name": "src/js/lazy-display/lazyDisplayColumnDataGroup.js",
            "modules": {},
            "classes": {
                "LazyDisplay.PassValueObject": 1,
                "LazyDisplay.LazyDisplayColumnDataGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/lazy-display/lazyDisplayView.js": {
            "name": "src/js/lazy-display/lazyDisplayView.js",
            "modules": {},
            "classes": {
                "LazyDisplay.LazyDisplayView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/lazy-display/main.js": {
            "name": "src/js/lazy-display/main.js",
            "modules": {
                "lazy-display": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/list-group/list-column-data/listColumnData.js": {
            "name": "src/js/list-group/list-column-data/listColumnData.js",
            "modules": {},
            "classes": {
                "ListGroup.ListColumnData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/list-group/list-column-data/listColumnDataGroup.js": {
            "name": "src/js/list-group/list-column-data/listColumnDataGroup.js",
            "modules": {},
            "classes": {
                "ListGroup.ListColumnDataGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/list-group/list-column-data/main.js": {
            "name": "src/js/list-group/list-column-data/main.js",
            "modules": {
                "list-column-data": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/list-group/list-item/listItemView.js": {
            "name": "src/js/list-group/list-item/listItemView.js",
            "modules": {},
            "classes": {
                "ListGroup.ListItemView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/list-group/list-item/main.js": {
            "name": "src/js/list-group/list-item/main.js",
            "modules": {
                "list-item": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/list-group/listGroupView.js": {
            "name": "src/js/list-group/listGroupView.js",
            "modules": {},
            "classes": {
                "ListGroup.ListGroupView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/list-group/main.js": {
            "name": "src/js/list-group/main.js",
            "modules": {
                "list-group": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/misc/alerts.js": {
            "name": "src/js/misc/alerts.js",
            "modules": {
                "alerts": 1
            },
            "classes": {
                "Alerts.AlertMessageComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/misc/app-wrapper.js": {
            "name": "src/js/misc/app-wrapper.js",
            "modules": {
                "app-wrapper": 1
            },
            "classes": {
                "AppWrapper.AppWrapper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/misc/popover.js": {
            "name": "src/js/misc/popover.js",
            "modules": {
                "popover": 1
            },
            "classes": {
                "Popovers.PopoverComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/misc/progress-bars.js": {
            "name": "src/js/misc/progress-bars.js",
            "modules": {
                "progress-bar": 1
            },
            "classes": {
                "ProgressBars.ProgressBar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/misc/tooltips.js": {
            "name": "src/js/misc/tooltips.js",
            "modules": {
                "tooltip": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/modal/modal-column-data/main.js": {
            "name": "src/js/modal/modal-column-data/main.js",
            "modules": {
                "modal-column-data": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/modal/modal-column-data/modalBodyColumnDataMixin.js": {
            "name": "src/js/modal/modal-column-data/modalBodyColumnDataMixin.js",
            "modules": {},
            "classes": {
                "Modal.ModalBodyColumnDataMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/modal/modal-column-data/modalColumnData.js": {
            "name": "src/js/modal/modal-column-data/modalColumnData.js",
            "modules": {},
            "classes": {
                "Modal.ModalColumnData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/modal/modal-column-data/modalColumnDataGroup.js": {
            "name": "src/js/modal/modal-column-data/modalColumnDataGroup.js",
            "modules": {},
            "classes": {
                "Modal.ModalColumnDataGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/modal/modal-column-data/modalFooterColumnDataMixin.js": {
            "name": "src/js/modal/modal-column-data/modalFooterColumnDataMixin.js",
            "modules": {},
            "classes": {
                "Modal.ModalFooterColumnDataMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/modal/modal-column-data/modalTitleColumnDataMixin.js": {
            "name": "src/js/modal/modal-column-data/modalTitleColumnDataMixin.js",
            "modules": {},
            "classes": {
                "Modal.ModalTitleColumnDataMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/modal/modal-item/main.js": {
            "name": "src/js/modal/modal-item/main.js",
            "modules": {
                "modal-item": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/modal/modal-item/modalBodyView.js": {
            "name": "src/js/modal/modal-item/modalBodyView.js",
            "modules": {},
            "classes": {
                "Modal.ModalBodyView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/modal/modal-item/modalFooterView.js": {
            "name": "src/js/modal/modal-item/modalFooterView.js",
            "modules": {},
            "classes": {
                "Modal.ModalFooterView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/modal/modal-item/modalFormBodyView.js": {
            "name": "src/js/modal/modal-item/modalFormBodyView.js",
            "modules": {},
            "classes": {
                "Modal.ModalFormBodyView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/modal/modal-item/modalTitleView.js": {
            "name": "src/js/modal/modal-item/modalTitleView.js",
            "modules": {},
            "classes": {
                "Modal.ModalTitleView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/modal/formWindowView.js": {
            "name": "src/js/modal/formWindowView.js",
            "modules": {},
            "classes": {
                "Modal.FormWindowView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/modal/main.js": {
            "name": "src/js/modal/main.js",
            "modules": {
                "modal": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/modal/modalWindowView.js": {
            "name": "src/js/modal/modalWindowView.js",
            "modules": {},
            "classes": {
                "Modal.ModalWindowView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/panels/panel-column-data/main.js": {
            "name": "src/js/panels/panel-column-data/main.js",
            "modules": {
                "panel-column-data": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/panels/panel-column-data/panelColumnData.js": {
            "name": "src/js/panels/panel-column-data/panelColumnData.js",
            "modules": {},
            "classes": {
                "PanelGroup.PanelColumnData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/panels/panel-column-data/panelColumnDataGroup.js": {
            "name": "src/js/panels/panel-column-data/panelColumnDataGroup.js",
            "modules": {},
            "classes": {
                "Panels.PanelColumnDataGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/panels/panel-views/main.js": {
            "name": "src/js/panels/panel-views/main.js",
            "modules": {
                "panel-views": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/panels/panel-views/panelCollapsibleView.js": {
            "name": "src/js/panels/panel-views/panelCollapsibleView.js",
            "modules": {},
            "classes": {
                "Panels.PanelCollapsibleView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/panels/panel-views/panelView.js": {
            "name": "src/js/panels/panel-views/panelView.js",
            "modules": {},
            "classes": {
                "Panels.PanelView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/panels/main.js": {
            "name": "src/js/panels/main.js",
            "modules": {
                "panels": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/panels/panelsView.js": {
            "name": "src/js/panels/panelsView.js",
            "modules": {},
            "classes": {
                "Panels.PanelsView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/timer/asyncQue.js": {
            "name": "src/js/timer/asyncQue.js",
            "modules": {},
            "classes": {
                "AsyncQue": 1
            },
            "fors": {
                "Timer": 1,
                "AsyncQue": 1
            },
            "namespaces": {}
        },
        "src/js/timer/main.js": {
            "name": "src/js/timer/main.js",
            "modules": {
                "timer": 1
            },
            "classes": {
                "Timer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/timer/timer-consts.js": {
            "name": "src/js/timer/timer-consts.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Timer": 1
            },
            "namespaces": {}
        },
        "src/js/timer/timerObj.js": {
            "name": "src/js/timer/timerObj.js",
            "modules": {},
            "classes": {
                "TimerObj": 1
            },
            "fors": {
                "Timer": 1
            },
            "namespaces": {}
        },
        "src/js/tree/tree-column-data/main.js": {
            "name": "src/js/tree/tree-column-data/main.js",
            "modules": {
                "tree-column-data": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/tree/tree-column-data/treeColumnData.js": {
            "name": "src/js/tree/tree-column-data/treeColumnData.js",
            "modules": {},
            "classes": {
                "Tree.TreeColumnData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/tree/tree-column-data/treeColumnDataGroup.js": {
            "name": "src/js/tree/tree-column-data/treeColumnDataGroup.js",
            "modules": {},
            "classes": {
                "Tree.TreeColumnDataGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/tree/tree-nodes/leafView.js": {
            "name": "src/js/tree/tree-nodes/leafView.js",
            "modules": {},
            "classes": {
                "Tree.LeafView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/tree/tree-nodes/main.js": {
            "name": "src/js/tree/tree-nodes/main.js",
            "modules": {
                "tree-nodes": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/tree/tree-nodes/nodeView.js": {
            "name": "src/js/tree/tree-nodes/nodeView.js",
            "modules": {},
            "classes": {
                "Tree.NodeView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/tree/main.js": {
            "name": "src/js/tree/main.js",
            "modules": {
                "tree": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/tree/nodeRecordMixin.js": {
            "name": "src/js/tree/nodeRecordMixin.js",
            "modules": {},
            "classes": {
                "Tree.NodeRecordMixin": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "array-modifier": {
            "name": "array-modifier",
            "submodules": {
                "array-modifier-groups": 1,
                "array-modifier-types": 1
            },
            "classes": {
                "ArrayMod.ArrayFilterModifier": 1,
                "ArrayMod.ArrayFilterGroup": 1,
                "ArrayMod.ArrayModGroup": 1,
                "ArrayMod.ArraySortGroup": 1,
                "ArrayMod.ArrayModifier": 1,
                "ArrayMod.ArraySearchModifier": 1,
                "ArrayMod.ArraySortModifier": 1,
                "ArrayMod.TagObject": 1,
                "ArrayMod.ArrayTagSearchModifier": 1,
                "ArrayMod.ArrayModController": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/js/array-modifier/arrayModController.js",
            "line": 9,
            "description": "Module to handle array modification like sorting, searching and filtering."
        },
        "array-modifier-groups": {
            "name": "array-modifier-groups",
            "submodules": {},
            "classes": {
                "ArrayMod.ArrayFilterGroup": 1,
                "ArrayMod.ArrayModGroup": 1,
                "ArrayMod.ArraySortGroup": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "array-modifier",
            "namespace": "",
            "tag": "module",
            "file": "src/js/array-modifier/array-modifier-groups/arraySortGroup.js",
            "line": 6,
            "description": "Module to handle array modification like sorting, searching and filtering."
        },
        "array-modifier-types": {
            "name": "array-modifier-types",
            "submodules": {},
            "classes": {
                "ArrayMod.ArrayFilterModifier": 1,
                "ArrayMod.ArrayModifier": 1,
                "ArrayMod.ArraySearchModifier": 1,
                "ArrayMod.ArraySortModifier": 1,
                "ArrayMod.TagObject": 1,
                "ArrayMod.ArrayTagSearchModifier": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "array-modifier",
            "namespace": "",
            "file": "src/js/array-modifier/array-modifier-types/arrayTagObjectModifier.js",
            "line": 50,
            "description": "Array modifier types"
        },
        "column-data": {
            "name": "column-data",
            "submodules": {
                "column-data-utils": 1,
                "column-data-validation": 1
            },
            "classes": {
                "ColumnDataChangeCollectorMixin": 1,
                "ColumnDataValueMixin": 1,
                "ColumnDataValidation": 1,
                "CSVDuplicateValidation": 1,
                "CSVRegexValidation": 1,
                "DuplicateAcrossRecordsValidation": 1,
                "EmptyValidation": 1,
                "NumberRangeValidation": 1,
                "RegexValidation": 1,
                "ColumnData.ColumnData": 1,
                "ColumnData.ColumnDataGroup": 1,
                "ColumnListenerEntry": 1,
                "APIConfig": 1,
                "ApplicationAdapter": 1,
                "ApplicationSerializer": 1,
                "CrudAdaptor": 1,
                "DelayedAddToHasManyMixin": 1
            },
            "fors": {
                "CrudAdapter": 1,
                "APIConfig": 1,
                "CrudAdaptor": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "src/js/crud-adapter/delayedAddToHasManyMixin.js",
            "line": 7,
            "description": "Module for meta data of a record type and its properties."
        },
        "column-data-utils": {
            "name": "column-data-utils",
            "submodules": {},
            "classes": {
                "ColumnDataChangeCollectorMixin": 1,
                "ColumnDataValueMixin": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "column-data",
            "namespace": "",
            "file": "src/js/column-data/utils/columnDataValueMixin.js",
            "line": 6,
            "description": "Utility classes related to column data."
        },
        "column-data-validation": {
            "name": "column-data-validation",
            "submodules": {},
            "classes": {
                "ColumnDataValidation": 1,
                "CSVDuplicateValidation": 1,
                "CSVRegexValidation": 1,
                "DuplicateAcrossRecordsValidation": 1,
                "EmptyValidation": 1,
                "NumberRangeValidation": 1,
                "RegexValidation": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "column-data",
            "namespace": "",
            "file": "src/js/column-data/validations/regexValidation.js",
            "line": 6,
            "description": "Validations for property in record."
        },
        "crud-adapter": {
            "name": "crud-adapter",
            "submodules": {},
            "classes": {
                "CrudAdapter": 1,
                "ModelWrapper": 1,
                "DragDrop.DraggableMixin": 1,
                "DragDrop.DroppableMixin": 1
            },
            "fors": {
                "CrudAdapter": 1,
                "ModelWrapper": 1,
                "CrudAdaptor": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "src/js/drag-drop/droppableMixin.js",
            "line": 7,
            "description": "Wrapper module around ember data."
        },
        "drag-drop": {
            "name": "drag-drop",
            "submodules": {},
            "classes": {
                "DragDrop.SortableDraggableMixin": 1,
                "DragDrop.SortableDroppableMixin": 1,
                "DragDrop.SortablePlaceholderMixin": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/js/drag-drop/sortablePlaceholderMixin.js",
            "line": 9,
            "description": "A drag drop module for all operations related to drag and drop. Uses html5 drag drop feature."
        },
        "form-column-data": {
            "name": "form-column-data",
            "submodules": {},
            "classes": {
                "Form.DisableForCol": 1,
                "Form.FormColumnData": 1,
                "Form.FormColumnDataGroup": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-column-data/formColumnDataGroup.js",
            "line": 7,
            "description": "Column data interface for form module."
        },
        "form": {
            "name": "form",
            "submodules": {
                "form-column-data": 1,
                "form-items": 1
            },
            "classes": {
                "Form.DisableForCol": 1,
                "Form.FormColumnData": 1,
                "Form.FormColumnDataGroup": 1,
                "Form.CheckBoxView": 1,
                "Form.CSVDataInputView": 1,
                "Form.DynamicMultiSelectView": 1,
                "Form.DynamicSelectView": 1,
                "Form.FileUploadView": 1,
                "Form.GroupCheckBoxView": 1,
                "Form.GroupRadioButtonView": 1,
                "Form.ImageUploadView": 1,
                "Form.LabelView": 1,
                "Form.Legend": 1,
                "Form.MultiEntryView": 1,
                "Form.MultiInputView": 1,
                "Form.MultipleValue": 1,
                "Form.MultipleValueMixin": 1,
                "Form.RadioInputView": 1,
                "Form.StaticSelectView": 1,
                "Form.TextAreaView": 1,
                "Form.TextInputView": 1,
                "Form.WrapperView": 1,
                "FormView": 1,
                "MultiColumnMixin": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/js/form/multiColumnMixin.js",
            "line": 6,
            "description": "A module for a form."
        },
        "form-items": {
            "name": "form-items",
            "submodules": {},
            "classes": {
                "Form.CheckBoxView": 1,
                "Form.CSVDataInputView": 1,
                "Form.DynamicMultiSelectView": 1,
                "Form.DynamicSelectView": 1,
                "Form.FileUploadView": 1,
                "Form.GroupCheckBoxView": 1,
                "Form.GroupRadioButtonView": 1,
                "Form.ImageUploadView": 1,
                "Form.LabelView": 1,
                "Form.Legend": 1,
                "Form.MultiEntryView": 1,
                "Form.MultiInputView": 1,
                "Form.MultipleValue": 1,
                "Form.MultipleValueMixin": 1,
                "Form.RadioInputView": 1,
                "Form.StaticSelectView": 1,
                "Form.TextAreaView": 1,
                "Form.TextInputView": 1,
                "Form.WrapperView": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/wrapperView.js",
            "line": 6,
            "description": "Module with all the form items."
        },
        "global-module": {
            "name": "global-module",
            "submodules": {
                "global-module-column-data": 1,
                "global-module-view": 1
            },
            "classes": {
                "GlobalModules.DisplayTextCollapsibleColumnDataMixin": 1,
                "GlobalModules.DisplayTextCollapsibleGlypiconColumnDataMixin": 1,
                "GlobalModules.DisplayTextColumnDataMixin": 1,
                "GlobalModules.DisplayTextWithTooltipColumnDataMixin": 1,
                "GlobalModules.GlobalModuleColumnDataGroupMixin": 1,
                "GlobalModules.DisplayTextCollapsibleGlypiconView": 1,
                "GlobalModules.DisplayTextCollapsibleView": 1,
                "GlobalModules.DisplayTextView": 1,
                "GlobalModules.DisplayTextWithTooltipView": 1,
                "LazyDisplay.PassValueObject": 1,
                "LazyDisplay.LazyDisplayColumnDataGroup": 1,
                "LazyDisplay.LazyDisplayView": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/js/lazy-display/lazyDisplayView.js",
            "line": 7,
            "description": "Global modules for certain tasks like displaying an attribute from the record."
        },
        "global-module-column-data": {
            "name": "global-module-column-data",
            "submodules": {},
            "classes": {
                "GlobalModules.DisplayTextCollapsibleColumnDataMixin": 1,
                "GlobalModules.DisplayTextCollapsibleGlypiconColumnDataMixin": 1,
                "GlobalModules.DisplayTextColumnDataMixin": 1,
                "GlobalModules.DisplayTextWithTooltipColumnDataMixin": 1,
                "GlobalModules.GlobalModuleColumnDataGroupMixin": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "global-module",
            "namespace": "",
            "file": "src/js/global-module/global-module-column-data/globalModuleColumnDataGroupMixin.js",
            "line": 8,
            "description": "Views for the global modules."
        },
        "global-module-view": {
            "name": "global-module-view",
            "submodules": {},
            "classes": {
                "GlobalModules.DisplayTextCollapsibleGlypiconView": 1,
                "GlobalModules.DisplayTextCollapsibleView": 1,
                "GlobalModules.DisplayTextView": 1,
                "GlobalModules.DisplayTextWithTooltipView": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "global-module",
            "namespace": "",
            "file": "src/js/global-module/global-module-view/displayTextWithTooltipView.js",
            "line": 8,
            "description": "Views for the global modules."
        },
        "lazy-display": {
            "name": "lazy-display",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/js/lazy-display/main.js",
            "line": 1,
            "description": "A module to selective load views for a very large set of records. Will load the views around the point of view."
        },
        "list-group": {
            "name": "list-group",
            "submodules": {
                "list-column-data": 1,
                "list-item": 1
            },
            "classes": {
                "ListGroup.ListColumnData": 1,
                "ListGroup.ListColumnDataGroup": 1,
                "ListGroup.ListItemView": 1,
                "ListGroup.ListGroupView": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/js/list-group/listGroupView.js",
            "line": 5,
            "description": "An ember wrapper module for bootstrap's list group component."
        },
        "list-column-data": {
            "name": "list-column-data",
            "submodules": {},
            "classes": {
                "ListGroup.ListColumnData": 1,
                "ListGroup.ListColumnDataGroup": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "list-group",
            "namespace": "",
            "file": "src/js/list-group/list-column-data/listColumnDataGroup.js",
            "line": 7,
            "description": "Different list item views."
        },
        "list-item": {
            "name": "list-item",
            "submodules": {},
            "classes": {
                "ListGroup.ListItemView": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "list-group",
            "namespace": "",
            "file": "src/js/list-group/list-item/listItemView.js",
            "line": 5,
            "description": "Different list item views."
        },
        "alerts": {
            "name": "alerts",
            "submodules": {},
            "classes": {
                "Alerts.AlertMessageComponent": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/js/misc/alerts.js",
            "line": 31,
            "description": "Alert module for all stuff related to alerts."
        },
        "app-wrapper": {
            "name": "app-wrapper",
            "submodules": {},
            "classes": {
                "AppWrapper.AppWrapper": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/js/misc/app-wrapper.js",
            "line": 13,
            "description": "A module for wrapper over Ember.Application which initializes a few things automatically"
        },
        "popover": {
            "name": "popover",
            "submodules": {},
            "classes": {
                "Popovers.PopoverComponent": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/js/misc/popover.js",
            "line": 12,
            "description": "Module for popovers."
        },
        "progress-bar": {
            "name": "progress-bar",
            "submodules": {},
            "classes": {
                "ProgressBars.ProgressBar": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/js/misc/progress-bars.js",
            "line": 26,
            "description": "Progress bar module."
        },
        "tooltip": {
            "name": "tooltip",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/js/misc/tooltips.js",
            "line": 5,
            "description": "Module for the tooltip component."
        },
        "modal-column-data": {
            "name": "modal-column-data",
            "submodules": {},
            "classes": {
                "Modal.ModalBodyColumnDataMixin": 1,
                "Modal.ModalColumnData": 1,
                "Modal.ModalColumnDataGroup": 1,
                "Modal.ModalFooterColumnDataMixin": 1,
                "Modal.ModalTitleColumnDataMixin": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "modal",
            "namespace": "",
            "file": "src/js/modal/modal-column-data/modalTitleColumnDataMixin.js",
            "line": 6,
            "description": "Modal items submodule."
        },
        "modal": {
            "name": "modal",
            "submodules": {
                "modal-column-data": 1,
                "modal-item": 1
            },
            "classes": {
                "Modal.ModalBodyColumnDataMixin": 1,
                "Modal.ModalColumnData": 1,
                "Modal.ModalColumnDataGroup": 1,
                "Modal.ModalFooterColumnDataMixin": 1,
                "Modal.ModalTitleColumnDataMixin": 1,
                "Modal.ModalBodyView": 1,
                "Modal.ModalFooterView": 1,
                "Modal.ModalFormBodyView": 1,
                "Modal.ModalTitleView": 1,
                "Modal.FormWindowView": 1,
                "Modal.ModalWindowView": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/js/modal/modalWindowView.js",
            "line": 5,
            "description": "A module for a modal windows."
        },
        "modal-item": {
            "name": "modal-item",
            "submodules": {},
            "classes": {
                "Modal.ModalBodyView": 1,
                "Modal.ModalFooterView": 1,
                "Modal.ModalFormBodyView": 1,
                "Modal.ModalTitleView": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "modal",
            "namespace": "",
            "file": "src/js/modal/modal-item/modalTitleView.js",
            "line": 6,
            "description": "Modal items submodule."
        },
        "panels": {
            "name": "panels",
            "submodules": {
                "panel-column-data": 1,
                "panel-views": 1
            },
            "classes": {
                "PanelGroup.PanelColumnData": 1,
                "Panels.PanelColumnDataGroup": 1,
                "Panels.PanelCollapsibleView": 1,
                "Panels.PanelView": 1,
                "Panels.PanelsView": 1,
                "AsyncQue": 1
            },
            "fors": {
                "Timer": 1,
                "AsyncQue": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "src/js/timer/asyncQue.js",
            "line": 8,
            "description": "An ember wrapper module for bootstrap's list group component."
        },
        "panel-column-data": {
            "name": "panel-column-data",
            "submodules": {},
            "classes": {
                "PanelGroup.PanelColumnData": 1,
                "Panels.PanelColumnDataGroup": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "panels",
            "namespace": "",
            "file": "src/js/panels/panel-column-data/panelColumnDataGroup.js",
            "line": 7,
            "description": "Column data interface for panels."
        },
        "panel-views": {
            "name": "panel-views",
            "submodules": {},
            "classes": {
                "Panels.PanelCollapsibleView": 1,
                "Panels.PanelView": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "panels",
            "namespace": "",
            "file": "src/js/panels/panel-views/panelView.js",
            "line": 5,
            "description": "Different panel views."
        },
        "timer": {
            "name": "timer",
            "submodules": {},
            "classes": {
                "Timer": 1,
                "TimerObj": 1
            },
            "fors": {
                "Timer": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "src/js/timer/timerObj.js",
            "line": 10,
            "description": "Timer module with stuff related to timers."
        },
        "tree": {
            "name": "tree",
            "submodules": {
                "tree-column-data": 1,
                "tree-nodes": 1
            },
            "classes": {
                "Tree.TreeColumnData": 1,
                "Tree.TreeColumnDataGroup": 1,
                "Tree.LeafView": 1,
                "Tree.NodeView": 1,
                "Tree.NodeRecordMixin": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/js/tree/nodeRecordMixin.js",
            "line": 5,
            "description": "Module to show record in a tree format."
        },
        "tree-column-data": {
            "name": "tree-column-data",
            "submodules": {},
            "classes": {
                "Tree.TreeColumnData": 1,
                "Tree.TreeColumnDataGroup": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "tree",
            "namespace": "",
            "file": "src/js/tree/tree-column-data/treeColumnDataGroup.js",
            "line": 7,
            "description": "Column data interface for tree."
        },
        "tree-nodes": {
            "name": "tree-nodes",
            "submodules": {},
            "classes": {
                "Tree.LeafView": 1,
                "Tree.NodeView": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "tree",
            "namespace": "",
            "file": "src/js/tree/tree-nodes/nodeView.js",
            "line": 5,
            "description": "Different node views."
        }
    },
    "classes": {
        "ArrayMod.ArrayFilterGroup": {
            "name": "ArrayMod.ArrayFilterGroup",
            "shortname": "ArrayMod.ArrayFilterGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "array-modifier",
            "file": "src/js/array-modifier/array-modifier-groups/arrayFilterGroup.js",
            "line": 6,
            "description": "Array filter modifier group which has ArrayMod.ArrayFilterModifier and ArrayMod.ArraySearchModifier",
            "submodule": "array-modifier-groups",
            "extends": "ArrayMod.ArrayModGroup"
        },
        "ArrayMod.ArrayModGroup": {
            "name": "ArrayMod.ArrayModGroup",
            "shortname": "ArrayMod.ArrayModGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "array-modifier",
            "namespace": "",
            "file": "src/js/array-modifier/array-modifier-groups/arrayModGroup.js",
            "line": 7,
            "description": "Basic array modifier group.",
            "submodule": "array-modifier-groups"
        },
        "ArrayMod.ArraySortGroup": {
            "name": "ArrayMod.ArraySortGroup",
            "shortname": "ArrayMod.ArraySortGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "array-modifier",
            "namespace": "",
            "file": "src/js/array-modifier/array-modifier-groups/arraySortGroup.js",
            "line": 6,
            "description": "Array sort modifier group.",
            "submodule": "array-modifier-groups",
            "extends": "ArrayMod.ArrayModGroup"
        },
        "ArrayMod.ArrayFilterModifier": {
            "name": "ArrayMod.ArrayFilterModifier",
            "shortname": "ArrayMod.ArrayFilterModifier",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "array-modifier",
            "namespace": "",
            "file": "src/js/array-modifier/array-modifier-types/arrayFilterModifier.js",
            "line": 6,
            "description": "Base class for array filter, which removes/adds elements.",
            "submodule": "array-modifier-types",
            "extends": "ArrayMod.ArrayModifier"
        },
        "ArrayMod.ArrayModifier": {
            "name": "ArrayMod.ArrayModifier",
            "shortname": "ArrayMod.ArrayModifier",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "array-modifier",
            "namespace": "",
            "file": "src/js/array-modifier/array-modifier-types/arrayModifier.js",
            "line": 5,
            "description": "Base class for array modifier",
            "submodule": "array-modifier-types"
        },
        "ArrayMod.ArraySearchModifier": {
            "name": "ArrayMod.ArraySearchModifier",
            "shortname": "ArrayMod.ArraySearchModifier",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "array-modifier",
            "namespace": "",
            "file": "src/js/array-modifier/array-modifier-types/arraySearchModifier.js",
            "line": 6,
            "description": "Class to search for a string in the array elements.",
            "submodule": "array-modifier-types",
            "extends": "ArrayMod.ArrayFilterModifier"
        },
        "ArrayMod.ArraySortModifier": {
            "name": "ArrayMod.ArraySortModifier",
            "shortname": "ArrayMod.ArraySortModifier",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "array-modifier",
            "namespace": "",
            "file": "src/js/array-modifier/array-modifier-types/arraySortModifier.js",
            "line": 6,
            "description": "Class to sort elements in the array.",
            "submodule": "array-modifier-types",
            "extends": "ArrayMod.ArrayModifier"
        },
        "ArrayMod.TagObject": {
            "name": "ArrayMod.TagObject",
            "shortname": "ArrayMod.TagObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "array-modifier",
            "namespace": "",
            "file": "src/js/array-modifier/array-modifier-types/arrayTagObjectModifier.js",
            "line": 7,
            "description": "Class for a tag. Never used directly. Passed as an object to ArrayMod.ArrayTagSearchModifier.",
            "submodule": "array-modifier-types"
        },
        "ArrayMod.ArrayTagSearchModifier": {
            "name": "ArrayMod.ArrayTagSearchModifier",
            "shortname": "ArrayMod.ArrayTagSearchModifier",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "array-modifier",
            "submodule": "array-modifier-types",
            "namespace": "",
            "file": "src/js/array-modifier/array-modifier-types/arrayTagObjectModifier.js",
            "line": 50,
            "description": "Class to filter elements based on tags.",
            "extends": "ArrayMod.ArrayFilterModifier"
        },
        "ArrayMod.ArrayModController": {
            "name": "ArrayMod.ArrayModController",
            "shortname": "ArrayMod.ArrayModController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "array-modifier",
            "namespace": "",
            "file": "src/js/array-modifier/arrayModController.js",
            "line": 9,
            "description": "Array controller which will modify the array on 'content' and put it under 'arrangedContent'."
        },
        "ColumnDataChangeCollectorMixin": {
            "name": "ColumnDataChangeCollectorMixin",
            "shortname": "ColumnDataChangeCollectorMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "column-data",
            "namespace": "",
            "file": "src/js/column-data/utils/columnDataChangeCollectorMixin.js",
            "line": 5,
            "description": "A mixin that is a parent of ColumnDataValueMixin that collects value changes and fires listeners on the column.",
            "submodule": "column-data-utils"
        },
        "ColumnDataValueMixin": {
            "name": "ColumnDataValueMixin",
            "shortname": "ColumnDataValueMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "column-data",
            "namespace": "",
            "file": "src/js/column-data/utils/columnDataValueMixin.js",
            "line": 6,
            "description": "A mixin that aliases the value of the attribute given by 'columnData' in 'record' to 'value'.",
            "submodule": "column-data-utils"
        },
        "ColumnDataValidation": {
            "name": "ColumnDataValidation",
            "shortname": "ColumnDataValidation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "column-data",
            "namespace": "",
            "file": "src/js/column-data/validations/columnDataValidation.js",
            "line": 17,
            "description": "Validation class that goes as 'validation' on column data.",
            "submodule": "column-data-validation"
        },
        "CSVDuplicateValidation": {
            "name": "CSVDuplicateValidation",
            "shortname": "CSVDuplicateValidation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "column-data",
            "namespace": "",
            "file": "src/js/column-data/validations/csvDuplicateValidation.js",
            "line": 7,
            "description": "Validate duplication in a CSV. Pass type = 3 to get this.",
            "submodule": "column-data-validation"
        },
        "CSVRegexValidation": {
            "name": "CSVRegexValidation",
            "shortname": "CSVRegexValidation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "column-data",
            "namespace": "",
            "file": "src/js/column-data/validations/csvRegexValidation.js",
            "line": 6,
            "description": "Validate on a regex on each value in a Comma Seperated Value. Pass type = 2 to get this.",
            "submodule": "column-data-validation"
        },
        "DuplicateAcrossRecordsValidation": {
            "name": "DuplicateAcrossRecordsValidation",
            "shortname": "DuplicateAcrossRecordsValidation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "column-data",
            "namespace": "",
            "file": "src/js/column-data/validations/duplicateAcrossRecordsValidation.js",
            "line": 7,
            "description": "Validate duplication across siblings of the record. Pass type = 4 to get this.",
            "submodule": "column-data-validation"
        },
        "EmptyValidation": {
            "name": "EmptyValidation",
            "shortname": "EmptyValidation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "column-data",
            "namespace": "",
            "file": "src/js/column-data/validations/emptyValidation.js",
            "line": 6,
            "description": "Not empty validation class. Pass type = 0 to get this.",
            "submodule": "column-data-validation"
        },
        "NumberRangeValidation": {
            "name": "NumberRangeValidation",
            "shortname": "NumberRangeValidation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "column-data",
            "namespace": "",
            "file": "src/js/column-data/validations/numberRangeValidation.js",
            "line": 7,
            "description": "Validate number ranges. Pass type = 5 to get this.",
            "submodule": "column-data-validation"
        },
        "RegexValidation": {
            "name": "RegexValidation",
            "shortname": "RegexValidation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "column-data",
            "namespace": "",
            "file": "src/js/column-data/validations/regexValidation.js",
            "line": 6,
            "description": "Validate on a regex. Pass type = 1 to get this.",
            "submodule": "column-data-validation"
        },
        "ColumnData.ColumnData": {
            "name": "ColumnData.ColumnData",
            "shortname": "ColumnData.ColumnData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "column-data",
            "namespace": "",
            "file": "src/js/column-data/columnData.js",
            "line": 9,
            "description": "Class for meta data for a property on a record."
        },
        "ColumnData.ColumnDataGroup": {
            "name": "ColumnData.ColumnDataGroup",
            "shortname": "ColumnData.ColumnDataGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "column-data",
            "namespace": "",
            "file": "src/js/column-data/columnDataGroup.js",
            "line": 8,
            "description": "Class with meta data of a record type."
        },
        "ColumnListenerEntry": {
            "name": "ColumnListenerEntry",
            "shortname": "ColumnListenerEntry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "column-data",
            "namespace": "",
            "file": "src/js/column-data/columnListenerEntry.js",
            "line": 5,
            "description": "Entry for column listeners."
        },
        "APIConfig": {
            "name": "APIConfig",
            "shortname": "APIConfig",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "column-data",
            "namespace": "",
            "file": "src/js/crud-adapter/applicationAdapter.js",
            "line": 12,
            "description": "API configuration"
        },
        "CrudAdapter": {
            "name": "CrudAdapter",
            "shortname": "CrudAdapter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "crud-adapter",
            "namespace": "",
            "file": "src/js/crud-adapter/main.js",
            "line": 20,
            "description": "Global class for crud-adapter."
        },
        "ApplicationAdapter": {
            "name": "ApplicationAdapter",
            "shortname": "ApplicationAdapter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "column-data",
            "namespace": "",
            "file": "src/js/crud-adapter/applicationAdapter.js",
            "line": 89,
            "description": "ApplicationAdapter for CRUD adapter. Not used direcrlty."
        },
        "ApplicationSerializer": {
            "name": "ApplicationSerializer",
            "shortname": "ApplicationSerializer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "column-data",
            "namespace": "",
            "file": "src/js/crud-adapter/applicationSerializer.js",
            "line": 15,
            "description": "ApplicationSerializer for CRUD serializer. Not used directly."
        },
        "CrudAdaptor": {
            "name": "CrudAdaptor",
            "shortname": "CrudAdaptor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "column-data",
            "namespace": ""
        },
        "DelayedAddToHasManyMixin": {
            "name": "DelayedAddToHasManyMixin",
            "shortname": "DelayedAddToHasManyMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "column-data",
            "namespace": "",
            "file": "src/js/crud-adapter/delayedAddToHasManyMixin.js",
            "line": 7,
            "description": "A mixin to add objects after a hasMany relation is resolved.",
            "static": 1
        },
        "ModelWrapper": {
            "name": "ModelWrapper",
            "shortname": "ModelWrapper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "crud-adapter",
            "namespace": "",
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 7,
            "description": "Model wrapper model class. No used directly. Instead use createModelWrapper."
        },
        "DragDrop.DraggableMixin": {
            "name": "DragDrop.DraggableMixin",
            "shortname": "DragDrop.DraggableMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "crud-adapter",
            "namespace": "",
            "file": "src/js/drag-drop/draggableMixin.js",
            "line": 7,
            "description": "A draggable mixin when included enables the view to be dragged."
        },
        "DragDrop.DroppableMixin": {
            "name": "DragDrop.DroppableMixin",
            "shortname": "DragDrop.DroppableMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "crud-adapter",
            "namespace": "",
            "file": "src/js/drag-drop/droppableMixin.js",
            "line": 7,
            "description": "A droppable mixin when included enables the view to be dropped on."
        },
        "DragDrop.SortableDraggableMixin": {
            "name": "DragDrop.SortableDraggableMixin",
            "shortname": "DragDrop.SortableDraggableMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "drag-drop",
            "namespace": "",
            "file": "src/js/drag-drop/sortableDraggableMixin.js",
            "line": 9,
            "description": "Draggable mixin for the sortable component."
        },
        "DragDrop.SortableDroppableMixin": {
            "name": "DragDrop.SortableDroppableMixin",
            "shortname": "DragDrop.SortableDroppableMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "drag-drop",
            "namespace": "",
            "file": "src/js/drag-drop/sortableDroppableMixin.js",
            "line": 9,
            "description": "Droppable mixin for the sortable component."
        },
        "DragDrop.SortablePlaceholderMixin": {
            "name": "DragDrop.SortablePlaceholderMixin",
            "shortname": "DragDrop.SortablePlaceholderMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "drag-drop",
            "namespace": "",
            "file": "src/js/drag-drop/sortablePlaceholderMixin.js",
            "line": 9,
            "description": "Placeholder mixin for empty sortable list."
        },
        "Form.DisableForCol": {
            "name": "Form.DisableForCol",
            "shortname": "Form.DisableForCol",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-column-data/formColumnData.js",
            "line": 6,
            "description": "Entry to disable/enable column based on value of another.",
            "submodule": "form-column-data"
        },
        "Form.FormColumnData": {
            "name": "Form.FormColumnData",
            "shortname": "Form.FormColumnData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-column-data/formColumnData.js",
            "line": 25,
            "description": "Column data for form module.",
            "submodule": "form-column-data"
        },
        "Form.FormColumnDataGroup": {
            "name": "Form.FormColumnDataGroup",
            "shortname": "Form.FormColumnDataGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-column-data/formColumnDataGroup.js",
            "line": 7,
            "description": "Column data group for form.",
            "submodule": "form-column-data"
        },
        "Form.CheckBoxView": {
            "name": "Form.CheckBoxView",
            "shortname": "Form.CheckBoxView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/checkBoxView.js",
            "line": 7,
            "description": "View for checkbox input.",
            "submodule": "form-items",
            "extends": "Form.TextInputView"
        },
        "Form.CSVDataInputView": {
            "name": "Form.CSVDataInputView",
            "shortname": "Form.CSVDataInputView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/csvDataInputView.js",
            "line": 10,
            "description": "Input to accept csv data. Can be uploaded from a file or entered manually. INCOMPLETE!",
            "submodule": "form-items",
            "extends": "Form.FileUploadView"
        },
        "Form.DynamicMultiSelectView": {
            "name": "Form.DynamicMultiSelectView",
            "shortname": "Form.DynamicMultiSelectView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/dynamicMultiSelectView.js",
            "line": 8,
            "description": "View for a select tag with dynamic options and multiple selections.",
            "submodule": "form-items",
            "extends": "Form.StaticSelectView"
        },
        "Form.DynamicSelectView": {
            "name": "Form.DynamicSelectView",
            "shortname": "Form.DynamicSelectView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/dynamicSelectView.js",
            "line": 8,
            "description": "View for a select tag with dynamic options.",
            "submodule": "form-items",
            "extends": "Form.StaticSelectView"
        },
        "Form.FileUploadView": {
            "name": "Form.FileUploadView",
            "shortname": "Form.FileUploadView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/fileUploadView.js",
            "line": 7,
            "description": "Form item for a file upload input.",
            "submodule": "form-items",
            "extends": "Form.TextInputView"
        },
        "Form.GroupCheckBoxView": {
            "name": "Form.GroupCheckBoxView",
            "shortname": "Form.GroupCheckBoxView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/groupCheckBoxView.js",
            "line": 7,
            "description": "View for a group of checkbox which translated to a single attribute.",
            "submodule": "form-items",
            "extends": "Form.TextInputView"
        },
        "Form.GroupRadioButtonView": {
            "name": "Form.GroupRadioButtonView",
            "shortname": "Form.GroupRadioButtonView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/groupRadioButtonView.js",
            "line": 7,
            "description": "View for a group of radio buttons.",
            "submodule": "form-items",
            "extends": "Form.TextInputView"
        },
        "Form.ImageUploadView": {
            "name": "Form.ImageUploadView",
            "shortname": "Form.ImageUploadView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/imageUploadView.js",
            "line": 7,
            "description": "Form item to upload image.",
            "submodule": "form-items",
            "extends": "Form.FileUploadView"
        },
        "Form.LabelView": {
            "name": "Form.LabelView",
            "shortname": "Form.LabelView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/labelView.js",
            "line": 7,
            "description": "View to put a lable.",
            "submodule": "form-items",
            "extends": "Form.TextInputView"
        },
        "Form.Legend": {
            "name": "Form.Legend",
            "shortname": "Form.Legend",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/legendView.js",
            "line": 6,
            "description": "View for legend tag.",
            "submodule": "form-items"
        },
        "Form.MultiEntryView": {
            "name": "Form.MultiEntryView",
            "shortname": "Form.MultiEntryView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/multiEntryView.js",
            "line": 10,
            "description": "View for multiple rows of items.",
            "submodule": "form-items",
            "extends": "Form.TextInputView"
        },
        "Form.MultiInputView": {
            "name": "Form.MultiInputView",
            "shortname": "Form.MultiInputView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/multiInputView.js",
            "line": 8,
            "description": "View for multiple form items.",
            "submodule": "form-items",
            "extends": "Form.MultiColumnMixin"
        },
        "Form.MultipleValue": {
            "name": "Form.MultipleValue",
            "shortname": "Form.MultipleValue",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/multipleValue.js",
            "line": 6,
            "description": "Base for multiple value object.",
            "submodule": "form-items"
        },
        "Form.MultipleValueMixin": {
            "name": "Form.MultipleValueMixin",
            "shortname": "Form.MultipleValueMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/multipleValueMixin.js",
            "line": 9,
            "description": "Mixin which enables views to have multiple values.",
            "submodule": "form-items"
        },
        "Form.RadioInputView": {
            "name": "Form.RadioInputView",
            "shortname": "Form.RadioInputView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/radioInputView.js",
            "line": 6,
            "description": "Basic radio button view.",
            "submodule": "form-items"
        },
        "Form.StaticSelectView": {
            "name": "Form.StaticSelectView",
            "shortname": "Form.StaticSelectView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/staticSelectView.js",
            "line": 7,
            "description": "View for select tag with static options.",
            "submodule": "form-items",
            "extends": "Form.TextInputView"
        },
        "Form.TextAreaView": {
            "name": "Form.TextAreaView",
            "shortname": "Form.TextAreaView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/textAreaView.js",
            "line": 7,
            "description": "View for textarea.",
            "submodule": "form-items",
            "extends": "Form.TextInputView"
        },
        "Form.TextInputView": {
            "name": "Form.TextInputView",
            "shortname": "Form.TextInputView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/textInputView.js",
            "line": 7,
            "description": "Base input view - a text input view.",
            "submodule": "form-items"
        },
        "Form.WrapperView": {
            "name": "Form.WrapperView",
            "shortname": "Form.WrapperView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/form-items/wrapperView.js",
            "line": 6,
            "description": "Extend this to add extra content before views like Form.MultiEntryView or Form.MultiInputView.",
            "submodule": "form-items"
        },
        "FormView": {
            "name": "FormView",
            "shortname": "FormView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/formView.js",
            "line": 8,
            "description": "Base form view.\nUsage:\n\n    {{view \"form/form\" record=record columnDataGroup=columnDataGroup}}"
        },
        "MultiColumnMixin": {
            "name": "MultiColumnMixin",
            "shortname": "MultiColumnMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "src/js/form/multiColumnMixin.js",
            "line": 6,
            "description": "Mixin for views with multiple child view with column data."
        },
        "GlobalModules.DisplayTextCollapsibleColumnDataMixin": {
            "name": "GlobalModules.DisplayTextCollapsibleColumnDataMixin",
            "shortname": "GlobalModules.DisplayTextCollapsibleColumnDataMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "global-module",
            "namespace": "",
            "file": "src/js/global-module/global-module-column-data/displayTextCollapsibleColumnDataMixin.js",
            "line": 9,
            "description": "Column Data for display text collapsible module.",
            "submodule": "global-module-column-data"
        },
        "GlobalModules.DisplayTextCollapsibleGlypiconColumnDataMixin": {
            "name": "GlobalModules.DisplayTextCollapsibleGlypiconColumnDataMixin",
            "shortname": "GlobalModules.DisplayTextCollapsibleGlypiconColumnDataMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "global-module",
            "namespace": "",
            "file": "src/js/global-module/global-module-column-data/displayTextCollapsibleGlypiconColumnDataMixin.js",
            "line": 9,
            "description": "Column Data for display text collapsible module.",
            "submodule": "global-module-column-data"
        },
        "GlobalModules.DisplayTextColumnDataMixin": {
            "name": "GlobalModules.DisplayTextColumnDataMixin",
            "shortname": "GlobalModules.DisplayTextColumnDataMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "global-module",
            "namespace": "",
            "file": "src/js/global-module/global-module-column-data/displayTextColumnDataMixin.js",
            "line": 8,
            "description": "Column Data for display text module.",
            "submodule": "global-module-column-data"
        },
        "GlobalModules.DisplayTextWithTooltipColumnDataMixin": {
            "name": "GlobalModules.DisplayTextWithTooltipColumnDataMixin",
            "shortname": "GlobalModules.DisplayTextWithTooltipColumnDataMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "global-module",
            "namespace": "",
            "file": "src/js/global-module/global-module-column-data/displayTextWithTooltipColumnDataMixin.js",
            "line": 9,
            "description": "Column Data for display text with tooltip module.",
            "submodule": "global-module-column-data"
        },
        "GlobalModules.GlobalModuleColumnDataGroupMixin": {
            "name": "GlobalModules.GlobalModuleColumnDataGroupMixin",
            "shortname": "GlobalModules.GlobalModuleColumnDataGroupMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "global-module",
            "namespace": "",
            "file": "src/js/global-module/global-module-column-data/globalModuleColumnDataGroupMixin.js",
            "line": 8,
            "description": "Column Data Group for global modules.",
            "submodule": "global-module-column-data"
        },
        "GlobalModules.DisplayTextCollapsibleGlypiconView": {
            "name": "GlobalModules.DisplayTextCollapsibleGlypiconView",
            "shortname": "GlobalModules.DisplayTextCollapsibleGlypiconView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "global-module",
            "namespace": "",
            "file": "src/js/global-module/global-module-view/displayTextCollapsibleGlypiconView.js",
            "line": 8,
            "description": "Module for a simple display of text with tooltip with connection to a collapsible module.",
            "submodule": "global-module-view",
            "extends": "GlobalModules.DisplayTextCollapsibleView"
        },
        "GlobalModules.DisplayTextCollapsibleView": {
            "name": "GlobalModules.DisplayTextCollapsibleView",
            "shortname": "GlobalModules.DisplayTextCollapsibleView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "global-module",
            "namespace": "",
            "file": "src/js/global-module/global-module-view/displayTextCollapsibleView.js",
            "line": 8,
            "description": "Module for a simple display of text with tooltip with connection to a collapsible module.",
            "submodule": "global-module-view",
            "extends": "GlobalModules.DisplayTextWithTooltipView"
        },
        "GlobalModules.DisplayTextView": {
            "name": "GlobalModules.DisplayTextView",
            "shortname": "GlobalModules.DisplayTextView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "global-module",
            "namespace": "",
            "file": "src/js/global-module/global-module-view/displayTextView.js",
            "line": 7,
            "description": "Module for a simple display of text.",
            "submodule": "global-module-view"
        },
        "GlobalModules.DisplayTextWithTooltipView": {
            "name": "GlobalModules.DisplayTextWithTooltipView",
            "shortname": "GlobalModules.DisplayTextWithTooltipView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "global-module",
            "namespace": "",
            "file": "src/js/global-module/global-module-view/displayTextWithTooltipView.js",
            "line": 8,
            "description": "Module for a simple display of text with tooltip.",
            "submodule": "global-module-view",
            "extends": "GlobalModules.DisplayTextView"
        },
        "LazyDisplay.PassValueObject": {
            "name": "LazyDisplay.PassValueObject",
            "shortname": "LazyDisplay.PassValueObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "global-module",
            "namespace": "",
            "file": "src/js/lazy-display/lazyDisplayColumnDataGroup.js",
            "line": 6,
            "description": "Class for each pass value entry"
        },
        "LazyDisplay.LazyDisplayColumnDataGroup": {
            "name": "LazyDisplay.LazyDisplayColumnDataGroup",
            "shortname": "LazyDisplay.LazyDisplayColumnDataGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "global-module",
            "namespace": "",
            "file": "src/js/lazy-display/lazyDisplayColumnDataGroup.js",
            "line": 37,
            "description": "A column data group for the lazy display module."
        },
        "LazyDisplay.LazyDisplayView": {
            "name": "LazyDisplay.LazyDisplayView",
            "shortname": "LazyDisplay.LazyDisplayView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "global-module",
            "namespace": "",
            "file": "src/js/lazy-display/lazyDisplayView.js",
            "line": 7,
            "description": "Main view to be used in the templates."
        },
        "ListGroup.ListColumnData": {
            "name": "ListGroup.ListColumnData",
            "shortname": "ListGroup.ListColumnData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "list-group",
            "namespace": "",
            "file": "src/js/list-group/list-column-data/listColumnData.js",
            "line": 5,
            "description": "Column data for the list group modules (title, rightBlock or desc based on 'type')",
            "submodule": "list-column-data"
        },
        "ListGroup.ListColumnDataGroup": {
            "name": "ListGroup.ListColumnDataGroup",
            "shortname": "ListGroup.ListColumnDataGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "list-group",
            "namespace": "",
            "file": "src/js/list-group/list-column-data/listColumnDataGroup.js",
            "line": 7,
            "description": "A column data group for the list group module.",
            "submodule": "list-column-data"
        },
        "ListGroup.ListItemView": {
            "name": "ListGroup.ListItemView",
            "shortname": "ListGroup.ListItemView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "list-group",
            "namespace": "",
            "file": "src/js/list-group/list-item/listItemView.js",
            "line": 5,
            "description": "Basic list item view.",
            "submodule": "list-item"
        },
        "ListGroup.ListGroupView": {
            "name": "ListGroup.ListGroupView",
            "shortname": "ListGroup.ListGroupView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "list-group",
            "namespace": "",
            "file": "src/js/list-group/listGroupView.js",
            "line": 5,
            "description": "A view for a list of records."
        },
        "Alerts.AlertMessageComponent": {
            "name": "Alerts.AlertMessageComponent",
            "shortname": "Alerts.AlertMessageComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "alerts",
            "namespace": "",
            "file": "src/js/misc/alerts.js",
            "line": 31,
            "description": "View for alert message.\nUsage : \n\n    {{alert-message type=\"info\" title=\"Title\" message=\"Message\"}}"
        },
        "AppWrapper.AppWrapper": {
            "name": "AppWrapper.AppWrapper",
            "shortname": "AppWrapper.AppWrapper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "app-wrapper",
            "namespace": "",
            "file": "src/js/misc/app-wrapper.js",
            "line": 13,
            "description": "A wrapper class over Ember.Application which initializes CrudAdapter and ColumnData."
        },
        "Popovers.PopoverComponent": {
            "name": "Popovers.PopoverComponent",
            "shortname": "Popovers.PopoverComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "popover",
            "namespace": "",
            "file": "src/js/misc/popover.js",
            "line": 12,
            "description": "Component for popover.\nUsage:\n\n    {{#pop-over title=\"Title\" body=\"Body of the popover\"}}Some body{{/pop-over}}"
        },
        "ProgressBars.ProgressBar": {
            "name": "ProgressBars.ProgressBar",
            "shortname": "ProgressBars.ProgressBar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "progress-bar",
            "namespace": "",
            "file": "src/js/misc/progress-bars.js",
            "line": 26,
            "description": "View for progress bars.\nUsed as:\n\n    {{#progress-bar maxVal=150 minVal=50 val=100 style=\"info\" animated=true striped=true}}{{val}}/{{maxVal}}{{/progress-bar}}"
        },
        "Modal.ModalBodyColumnDataMixin": {
            "name": "Modal.ModalBodyColumnDataMixin",
            "shortname": "Modal.ModalBodyColumnDataMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "modal",
            "namespace": "",
            "file": "src/js/modal/modal-column-data/modalBodyColumnDataMixin.js",
            "line": 6,
            "description": "Column Data mixin for modal body.",
            "submodule": "modal-column-data",
            "extends": "GlobalModules.DisplayTextColumnDataMixin"
        },
        "Modal.ModalColumnData": {
            "name": "Modal.ModalColumnData",
            "shortname": "Modal.ModalColumnData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "modal",
            "namespace": "",
            "file": "src/js/modal/modal-column-data/modalColumnData.js",
            "line": 6,
            "description": "Column data for the modal items (title, body, footer)",
            "submodule": "modal-column-data"
        },
        "Modal.ModalColumnDataGroup": {
            "name": "Modal.ModalColumnDataGroup",
            "shortname": "Modal.ModalColumnDataGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "modal",
            "namespace": "",
            "file": "src/js/modal/modal-column-data/modalColumnDataGroup.js",
            "line": 6,
            "description": "Column data group for modal module.",
            "submodule": "modal-column-data"
        },
        "Modal.ModalFooterColumnDataMixin": {
            "name": "Modal.ModalFooterColumnDataMixin",
            "shortname": "Modal.ModalFooterColumnDataMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "modal",
            "namespace": "",
            "file": "src/js/modal/modal-column-data/modalFooterColumnDataMixin.js",
            "line": 6,
            "description": "Column Data mixin for modal footer.",
            "submodule": "modal-column-data",
            "extends": "GlobalModules.DisplayTextColumnDataMixin"
        },
        "Modal.ModalTitleColumnDataMixin": {
            "name": "Modal.ModalTitleColumnDataMixin",
            "shortname": "Modal.ModalTitleColumnDataMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "modal",
            "namespace": "",
            "file": "src/js/modal/modal-column-data/modalTitleColumnDataMixin.js",
            "line": 6,
            "description": "Column Data mixin for modal title.",
            "submodule": "modal-column-data",
            "extends": "GlobalModules.DisplayTextColumnDataMixin"
        },
        "Modal.ModalBodyView": {
            "name": "Modal.ModalBodyView",
            "shortname": "Modal.ModalBodyView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "modal",
            "namespace": "",
            "file": "src/js/modal/modal-item/modalBodyView.js",
            "line": 6,
            "description": "Body view for modal.",
            "submodule": "modal-item",
            "exends": "GlobalModules.DisplayTextView"
        },
        "Modal.ModalFooterView": {
            "name": "Modal.ModalFooterView",
            "shortname": "Modal.ModalFooterView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "modal",
            "namespace": "",
            "file": "src/js/modal/modal-item/modalFooterView.js",
            "line": 6,
            "description": "Footer view for modal.",
            "submodule": "modal-item",
            "exends": "GlobalModules.DisplayTextView"
        },
        "Modal.ModalFormBodyView": {
            "name": "Modal.ModalFormBodyView",
            "shortname": "Modal.ModalFormBodyView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "modal",
            "namespace": "",
            "file": "src/js/modal/modal-item/modalFormBodyView.js",
            "line": 7,
            "description": "Body view for modal with form.",
            "submodule": "modal-item",
            "exends": "Modal.ModalBodyView"
        },
        "Modal.ModalTitleView": {
            "name": "Modal.ModalTitleView",
            "shortname": "Modal.ModalTitleView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "modal",
            "namespace": "",
            "file": "src/js/modal/modal-item/modalTitleView.js",
            "line": 6,
            "description": "Title view for modal.",
            "submodule": "modal-item",
            "exends": "GlobalModules.DisplayTextView"
        },
        "Modal.FormWindowView": {
            "name": "Modal.FormWindowView",
            "shortname": "Modal.FormWindowView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "modal",
            "namespace": "",
            "file": "src/js/modal/formWindowView.js",
            "line": 6,
            "description": "Modal window that encapsulates form view.",
            "extends": "Modal.ModalWindowView"
        },
        "Modal.ModalWindowView": {
            "name": "Modal.ModalWindowView",
            "shortname": "Modal.ModalWindowView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "modal",
            "namespace": "",
            "file": "src/js/modal/modalWindowView.js",
            "line": 5,
            "description": "Base modal window."
        },
        "PanelGroup.PanelColumnData": {
            "name": "PanelGroup.PanelColumnData",
            "shortname": "PanelGroup.PanelColumnData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panels",
            "namespace": "",
            "file": "src/js/panels/panel-column-data/panelColumnData.js",
            "line": 7,
            "description": "Column data for the panels modules (heading, body and footer based on 'type')",
            "submodule": "panel-column-data"
        },
        "Panels.PanelColumnDataGroup": {
            "name": "Panels.PanelColumnDataGroup",
            "shortname": "Panels.PanelColumnDataGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panels",
            "namespace": "",
            "file": "src/js/panels/panel-column-data/panelColumnDataGroup.js",
            "line": 7,
            "description": "A column data group for the panels module.",
            "submodule": "panel-column-data"
        },
        "Panels.PanelCollapsibleView": {
            "name": "Panels.PanelCollapsibleView",
            "shortname": "Panels.PanelCollapsibleView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panels",
            "namespace": "",
            "file": "src/js/panels/panel-views/panelCollapsibleView.js",
            "line": 6,
            "description": "Panel view for a collapsible.",
            "submodule": "panel-views",
            "extends": "Panels.PanelView"
        },
        "Panels.PanelView": {
            "name": "Panels.PanelView",
            "shortname": "Panels.PanelView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panels",
            "namespace": "",
            "file": "src/js/panels/panel-views/panelView.js",
            "line": 5,
            "description": "Basic panel view.",
            "submodule": "panel-views"
        },
        "Panels.PanelsView": {
            "name": "Panels.PanelsView",
            "shortname": "Panels.PanelsView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panels",
            "namespace": "",
            "file": "src/js/panels/panelsView.js",
            "line": 5,
            "description": "A view for a set of panels."
        },
        "AsyncQue": {
            "name": "AsyncQue",
            "shortname": "AsyncQue",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panels",
            "namespace": "",
            "file": "src/js/timer/asyncQue.js",
            "line": 8,
            "access": "private",
            "tagname": ""
        },
        "Timer": {
            "name": "Timer",
            "shortname": "Timer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "timer",
            "namespace": "",
            "file": "src/js/timer/main.js",
            "line": 11,
            "description": "Timer global class."
        },
        "TimerObj": {
            "name": "TimerObj",
            "shortname": "TimerObj",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "timer",
            "namespace": "",
            "file": "src/js/timer/timerObj.js",
            "line": 10,
            "description": "A timer module which executes a job periodically."
        },
        "Tree.TreeColumnData": {
            "name": "Tree.TreeColumnData",
            "shortname": "Tree.TreeColumnData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "tree",
            "namespace": "",
            "file": "src/js/tree/tree-column-data/treeColumnData.js",
            "line": 5,
            "description": "Column data for the tree modules (leftBar, label or node based on 'type')",
            "submodule": "tree-column-data"
        },
        "Tree.TreeColumnDataGroup": {
            "name": "Tree.TreeColumnDataGroup",
            "shortname": "Tree.TreeColumnDataGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "tree",
            "namespace": "",
            "file": "src/js/tree/tree-column-data/treeColumnDataGroup.js",
            "line": 7,
            "description": "A column data group for the tree module.",
            "submodule": "tree-column-data"
        },
        "Tree.LeafView": {
            "name": "Tree.LeafView",
            "shortname": "Tree.LeafView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "tree",
            "namespace": "",
            "file": "src/js/tree/tree-nodes/leafView.js",
            "line": 6,
            "description": "Node view for a leaf node.",
            "submodule": "tree-nodes"
        },
        "Tree.NodeView": {
            "name": "Tree.NodeView",
            "shortname": "Tree.NodeView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "tree",
            "namespace": "",
            "file": "src/js/tree/tree-nodes/nodeView.js",
            "line": 5,
            "description": "Node view for a non leaf node.",
            "submodule": "tree-nodes"
        },
        "Tree.NodeRecordMixin": {
            "name": "Tree.NodeRecordMixin",
            "shortname": "Tree.NodeRecordMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "tree",
            "namespace": "",
            "file": "src/js/tree/nodeRecordMixin.js",
            "line": 5,
            "description": "Mixin to define behaviour of a record in the tree module."
        }
    },
    "classitems": [
        {
            "file": "src/js/array-modifier/array-modifier-groups/arrayModGroup.js",
            "line": 17,
            "description": "Array modifiers present in the group. Use object while creating.",
            "itemtype": "property",
            "name": "arrayMods",
            "type": "Array",
            "class": "ArrayMod.ArrayModGroup",
            "module": "array-modifier",
            "submodule": "array-modifier-groups"
        },
        {
            "file": "src/js/array-modifier/array-modifier-groups/arrayModGroup.js",
            "line": 28,
            "description": "Method that returns whether an item can be added or not.",
            "itemtype": "method",
            "name": "canAdd",
            "params": [
                {
                    "name": "item",
                    "description": "Item that is to be checked whether it can be added or not.",
                    "type": "Class"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ArrayMod.ArrayModGroup",
            "module": "array-modifier",
            "submodule": "array-modifier-groups"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arrayFilterModifier.js",
            "line": 18,
            "description": "Method called to modify an entire array.",
            "itemtype": "method",
            "name": "modify",
            "params": [
                {
                    "name": "array",
                    "description": "The array to modify.",
                    "type": "Array"
                }
            ],
            "class": "ArrayMod.ArrayFilterModifier",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arrayFilterModifier.js",
            "line": 31,
            "description": "Method called to modify a single element.",
            "itemtype": "method",
            "name": "modify",
            "params": [
                {
                    "name": "item",
                    "description": "The item to modify.",
                    "type": "Class"
                },
                {
                    "name": "value",
                    "description": "The value to modfiy on.",
                    "type": "Any"
                }
            ],
            "class": "ArrayMod.ArrayFilterModifier",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arrayModifier.js",
            "line": 13,
            "description": "Type of the array modifier.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "\"basic\"",
            "readonly": "",
            "class": "ArrayMod.ArrayModifier",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arrayModifier.js",
            "line": 23,
            "description": "Array modifier group type the modifier belongs to.",
            "itemtype": "property",
            "name": "groupType",
            "type": "String",
            "default": "\"basic\"",
            "readonly": "",
            "class": "ArrayMod.ArrayModifier",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arrayModifier.js",
            "line": 33,
            "description": "Property the modifier applies on.",
            "itemtype": "property",
            "name": "property",
            "type": "String",
            "class": "ArrayMod.ArrayModifier",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arrayModifier.js",
            "line": 41,
            "description": "Set to true if a listener on all objects in the array should be added.",
            "itemtype": "property",
            "name": "addObserverToAll",
            "type": "Boolean",
            "default": "true",
            "class": "ArrayMod.ArrayModifier",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arrayModifier.js",
            "line": 50,
            "description": "Function called when observers are supposed to be added.",
            "itemtype": "method",
            "name": "addModObservers",
            "params": [
                {
                    "name": "context",
                    "description": "Context to add the observer to.",
                    "type": "Class"
                },
                {
                    "name": "method",
                    "description": "Method to be called when observer is called.",
                    "type": "String|Function"
                }
            ],
            "class": "ArrayMod.ArrayModifier",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arrayModifier.js",
            "line": 61,
            "description": "Function called when observers are supposed to be removed.",
            "itemtype": "method",
            "name": "removeModObservers",
            "params": [
                {
                    "name": "context",
                    "description": "Context to add the observer to.",
                    "type": "Class"
                },
                {
                    "name": "method",
                    "description": "Method to be called when observer is called.",
                    "type": "String|Function"
                }
            ],
            "class": "ArrayMod.ArrayModifier",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arraySearchModifier.js",
            "line": 17,
            "description": "Search string.",
            "itemtype": "property",
            "name": "searchString",
            "type": "String",
            "class": "ArrayMod.ArraySearchModifier",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arraySearchModifier.js",
            "line": 25,
            "description": "If set to true, all elements matching searchString will be removed, else all elements not matching searchString will be removed.",
            "itemtype": "property",
            "name": "negate",
            "type": "Boolean",
            "default": "false",
            "class": "ArrayMod.ArraySearchModifier",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arraySearchModifier.js",
            "line": 34,
            "description": "Search string regex object.",
            "itemtype": "property",
            "name": "searchRegex",
            "type": "RegEx",
            "access": "private",
            "tagname": "",
            "class": "ArrayMod.ArraySearchModifier",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arraySortModifier.js",
            "line": 18,
            "description": "Order to sort by. true for ascending, false for descending",
            "itemtype": "property",
            "name": "order",
            "type": "String",
            "default": "true",
            "class": "ArrayMod.ArraySortModifier",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arrayTagObjectModifier.js",
            "line": 15,
            "description": "Label for the tag.",
            "itemtype": "property",
            "name": "label",
            "type": "String",
            "class": "ArrayMod.TagObject",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arrayTagObjectModifier.js",
            "line": 23,
            "description": "Value for the tag.",
            "itemtype": "property",
            "name": "val",
            "type": "String",
            "class": "ArrayMod.TagObject",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arrayTagObjectModifier.js",
            "line": 31,
            "description": "Checked boolean.",
            "itemtype": "property",
            "name": "checked",
            "type": "Boolean",
            "default": "true",
            "class": "ArrayMod.TagObject",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arrayTagObjectModifier.js",
            "line": 40,
            "description": "If set to true, val will be not taken if checked, else val will be taken if checked.",
            "itemtype": "property",
            "name": "negate",
            "type": "Boolean",
            "default": "false",
            "class": "ArrayMod.TagObject",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arrayTagObjectModifier.js",
            "line": 61,
            "description": "Tags to filter with. Elements are ArrayMod.TagObject instances. But passed as objects while creating.",
            "itemtype": "property",
            "name": "tags",
            "class": "ArrayMod.ArrayTagSearchModifier",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arrayTagObjectModifier.js",
            "line": 68,
            "description": "Tags that are taken.",
            "itemtype": "property",
            "name": "selectedTags",
            "class": "ArrayMod.ArrayTagSearchModifier",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/array-modifier-types/arrayTagObjectModifier.js",
            "line": 75,
            "description": "Joiner for the tags. Can be \"or\" or \"and\".",
            "itemtype": "property",
            "name": "joiner",
            "type": "String",
            "default": "\"or\"",
            "class": "ArrayMod.ArrayTagSearchModifier",
            "module": "array-modifier",
            "submodule": "array-modifier-types"
        },
        {
            "file": "src/js/array-modifier/arrayModController.js",
            "line": 24,
            "description": "Array mods added to the controller.",
            "itemtype": "property",
            "name": "arrayMods",
            "type": "Array",
            "class": "ArrayMod.ArrayModController",
            "module": "array-modifier"
        },
        {
            "file": "src/js/array-modifier/arrayModController.js",
            "line": 33,
            "description": "Array mods groups formed by arrayMods.",
            "itemtype": "property",
            "name": "arrayMods",
            "type": "Array",
            "readonly": "",
            "class": "ArrayMod.ArrayModController",
            "module": "array-modifier"
        },
        {
            "file": "src/js/column-data/utils/columnDataValueMixin.js",
            "line": 20,
            "description": "Column data instance to be used to extract value.",
            "itemtype": "property",
            "name": "columnData",
            "type": "Class",
            "class": "ColumnDataValueMixin",
            "module": "column-data",
            "submodule": "column-data-utils"
        },
        {
            "file": "src/js/column-data/utils/columnDataValueMixin.js",
            "line": 28,
            "description": "Record to extract the value from.",
            "itemtype": "property",
            "name": "record",
            "type": "Class",
            "class": "ColumnDataValueMixin",
            "module": "column-data",
            "submodule": "column-data-utils"
        },
        {
            "file": "src/js/column-data/utils/columnDataValueMixin.js",
            "line": 49,
            "description": "Callback callled when the column listened on changes.",
            "itemtype": "method",
            "name": "listenedColumnChangedHook",
            "params": [
                {
                    "name": "changedColumnData",
                    "description": "ColumnData instance of the changed column.",
                    "type": "ColumnData"
                },
                {
                    "name": "changedValue",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "oldValue",
                    "description": "",
                    "type": "Any"
                }
            ],
            "class": "ColumnDataValueMixin",
            "module": "column-data",
            "submodule": "column-data-utils"
        },
        {
            "file": "src/js/column-data/utils/columnDataValueMixin.js",
            "line": 79,
            "description": "An alias to the value in attribute. It undergoes validations and the change will be bubbled.",
            "itemtype": "property",
            "name": "value",
            "class": "ColumnDataValueMixin",
            "module": "column-data",
            "submodule": "column-data-utils"
        },
        {
            "file": "src/js/column-data/utils/columnDataValueMixin.js",
            "line": 110,
            "description": "Callback called when the value changes.",
            "itemtype": "method",
            "name": "valueChangeHook",
            "params": [
                {
                    "name": "val",
                    "description": "",
                    "type": "Any"
                }
            ],
            "class": "ColumnDataValueMixin",
            "module": "column-data",
            "submodule": "column-data-utils"
        },
        {
            "file": "src/js/column-data/utils/columnDataValueMixin.js",
            "line": 136,
            "description": "Callback called when record changes.",
            "itemtype": "method",
            "name": "recordChangeHook",
            "class": "ColumnDataValueMixin",
            "module": "column-data",
            "submodule": "column-data-utils"
        },
        {
            "file": "src/js/column-data/utils/columnDataValueMixin.js",
            "line": 143,
            "description": "Callback called when record is removed (set to null).",
            "itemtype": "method",
            "name": "recordRemovedHook",
            "class": "ColumnDataValueMixin",
            "module": "column-data",
            "submodule": "column-data-utils"
        },
        {
            "file": "src/js/column-data/utils/columnDataValueMixin.js",
            "line": 174,
            "description": "Parent object with mixin ColumnData.ColumnDataChangeCollectorMixin to bubble to.",
            "itemtype": "property",
            "name": "parentForBubbling",
            "type": "Instance",
            "class": "ColumnDataValueMixin",
            "module": "column-data",
            "submodule": "column-data-utils"
        },
        {
            "file": "src/js/column-data/validations/columnDataValidation.js",
            "line": 30,
            "description": "Array of validations to run. Passed as objects while creating.",
            "itemtype": "property",
            "name": "validations",
            "type": "Array",
            "class": "ColumnDataValidation",
            "module": "column-data",
            "submodule": "column-data-validation"
        },
        {
            "file": "src/js/column-data/validations/columnDataValidation.js",
            "line": 38,
            "itemtype": "property",
            "name": "validate",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "ColumnDataValidation",
            "module": "column-data",
            "submodule": "column-data-validation"
        },
        {
            "file": "src/js/column-data/validations/columnDataValidation.js",
            "line": 45,
            "description": "Method to validate a value on record.",
            "itemtype": "method",
            "name": "validateValue",
            "params": [
                {
                    "name": "value",
                    "description": "Value to validate.",
                    "type": "Any"
                },
                {
                    "name": "record",
                    "description": "Record to validate on.",
                    "type": "Class"
                },
                {
                    "name": "validations",
                    "description": "Optional override of the validations to run.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns an array with 1st element as a boolean which says whether validations passed or not, 2nd element is the invalid message if it failed.",
                "type": "Array"
            },
            "class": "ColumnDataValidation",
            "module": "column-data",
            "submodule": "column-data-validation"
        },
        {
            "file": "src/js/column-data/validations/columnDataValidation.js",
            "line": 76,
            "description": "Boolean to denote whether the property is mandatory or not.",
            "itemtype": "property",
            "name": "mandatory",
            "type": "Boolean",
            "class": "ColumnDataValidation",
            "module": "column-data",
            "submodule": "column-data-validation"
        },
        {
            "file": "src/js/column-data/validations/csvRegexValidation.js",
            "line": 14,
            "description": "Delimeter to use to split values in the CSV.",
            "itemtype": "property",
            "name": "delimeter",
            "type": "String",
            "class": "CSVRegexValidation",
            "module": "column-data",
            "submodule": "column-data-validation"
        },
        {
            "file": "src/js/column-data/validations/duplicateAcrossRecordsValidation.js",
            "line": 15,
            "description": "Path relative to record to check duplication under.",
            "itemtype": "property",
            "name": "duplicateCheckPath",
            "type": "String",
            "class": "DuplicateAcrossRecordsValidation",
            "module": "column-data",
            "submodule": "column-data-validation"
        },
        {
            "file": "src/js/column-data/validations/duplicateAcrossRecordsValidation.js",
            "line": 23,
            "description": "Key in the object to check duplicate for.",
            "itemtype": "property",
            "name": "duplicateCheckKey",
            "type": "String",
            "class": "DuplicateAcrossRecordsValidation",
            "module": "column-data",
            "submodule": "column-data-validation"
        },
        {
            "file": "src/js/column-data/validations/emptyValidation.js",
            "line": 14,
            "description": "Message to show when the validation fails.",
            "itemtype": "property",
            "name": "invalidMessage",
            "type": "String",
            "class": "EmptyValidation",
            "module": "column-data",
            "submodule": "column-data-validation"
        },
        {
            "file": "src/js/column-data/validations/emptyValidation.js",
            "line": 22,
            "description": "Boolean that says whether to negate the result or not.",
            "itemtype": "property",
            "name": "negate",
            "type": "Boolean",
            "class": "EmptyValidation",
            "module": "column-data",
            "submodule": "column-data-validation"
        },
        {
            "file": "src/js/column-data/validations/numberRangeValidation.js",
            "line": 15,
            "description": "Min value of a number.",
            "itemtype": "property",
            "name": "minValue",
            "type": "Number",
            "class": "NumberRangeValidation",
            "module": "column-data",
            "submodule": "column-data-validation"
        },
        {
            "file": "src/js/column-data/validations/numberRangeValidation.js",
            "line": 23,
            "description": "Max value of a number.",
            "itemtype": "property",
            "name": "maxValue",
            "type": "Number",
            "class": "NumberRangeValidation",
            "module": "column-data",
            "submodule": "column-data-validation"
        },
        {
            "file": "src/js/column-data/validations/regexValidation.js",
            "line": 14,
            "description": "Regex to valide with.",
            "itemtype": "property",
            "name": "regex",
            "type": "String",
            "class": "RegexValidation",
            "module": "column-data",
            "submodule": "column-data-validation"
        },
        {
            "file": "src/js/column-data/validations/regexValidation.js",
            "line": 22,
            "description": "Regex flags to use while creating the regex object.",
            "itemtype": "property",
            "name": "regexFlags",
            "type": "String",
            "class": "RegexValidation",
            "module": "column-data",
            "submodule": "column-data-validation"
        },
        {
            "file": "src/js/column-data/validations/regexValidation.js",
            "line": 30,
            "description": "RegExp object create using regex and regexFlags.",
            "itemtype": "property",
            "name": "regexObject",
            "type": "RegExp",
            "class": "RegexValidation",
            "module": "column-data",
            "submodule": "column-data-validation"
        },
        {
            "file": "src/js/column-data/validations/regexValidation.js",
            "line": 40,
            "description": "Method to validate.",
            "itemtype": "method",
            "name": "validateValue",
            "params": [
                {
                    "name": "value",
                    "description": "Value to validate.",
                    "type": "Any"
                },
                {
                    "name": "record",
                    "description": "Record to validate on.",
                    "type": "Class"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "RegexValidation",
            "module": "column-data",
            "submodule": "column-data-validation"
        },
        {
            "file": "src/js/column-data/columnData.js",
            "line": 20,
            "description": "A name to uniquely identify column data.",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "ColumnData.ColumnData",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnData.js",
            "line": 28,
            "description": "Key name of the attribute in the record. If not provided, 'name' is used a key.",
            "itemtype": "property",
            "name": "keyName",
            "type": "String",
            "class": "ColumnData.ColumnData",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnData.js",
            "line": 36,
            "description": "Key of the attribute based on keyName or name if keyName is not provided.",
            "itemtype": "property",
            "name": "key",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "ColumnData.ColumnData",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnData.js",
            "line": 47,
            "description": "Meta data for the validation of the attribute on the record. Passed as an object while creating.",
            "itemtype": "property",
            "name": "validation",
            "type": "Class",
            "class": "ColumnData.ColumnData",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnData.js",
            "line": 55,
            "description": "Meta data used by list-group module. Passed as an object while creating.",
            "itemtype": "property",
            "name": "list",
            "type": "Class",
            "class": "ColumnData.ColumnData",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnData.js",
            "line": 63,
            "description": "Meta data used by tree module. Passed as an object while creating.",
            "itemtype": "property",
            "name": "tree",
            "type": "Class",
            "class": "ColumnData.ColumnData",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnData.js",
            "line": 71,
            "description": "Meta data used by sortable module. Passed as an object while creating.",
            "itemtype": "property",
            "name": "sort",
            "type": "Class",
            "class": "ColumnData.ColumnData",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnData.js",
            "line": 79,
            "description": "Meta data used by panels module. Passed as an object while creating.",
            "itemtype": "property",
            "name": "panel",
            "type": "Class",
            "class": "ColumnData.ColumnData",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnData.js",
            "line": 87,
            "description": "Meta data used by form module. Passed as an object while creating.",
            "itemtype": "property",
            "name": "form",
            "type": "Class",
            "class": "ColumnData.ColumnData",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnData.js",
            "line": 95,
            "description": "Meta data used by model module. Passed as an object while creating.",
            "itemtype": "property",
            "name": "model",
            "type": "Class",
            "class": "ColumnData.ColumnData",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnData.js",
            "line": 103,
            "description": "A suitable label for the attribute used in displaying in certain places.",
            "itemtype": "property",
            "name": "label",
            "type": "String",
            "class": "ColumnData.ColumnData",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnData.js",
            "line": 111,
            "description": "A nested child column data.",
            "itemtype": "property",
            "name": "childCol",
            "type": "Class",
            "access": "private",
            "tagname": "",
            "class": "ColumnData.ColumnData",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnData.js",
            "line": 120,
            "description": "A name for the nesting of a column data.",
            "itemtype": "property",
            "name": "childColName",
            "type": "String",
            "class": "ColumnData.ColumnData",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnData.js",
            "line": 135,
            "description": "A nested child column data group.",
            "itemtype": "property",
            "name": "childColGroup",
            "type": "Class",
            "access": "private",
            "tagname": "",
            "class": "ColumnData.ColumnData",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnData.js",
            "line": 144,
            "description": "A name for the nesting of a column data group.",
            "itemtype": "property",
            "name": "childColGroupName",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "ColumnData.ColumnData",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnDataGroup.js",
            "line": 20,
            "description": "A name to uniquely identify the column data group.",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "ColumnData.ColumnDataGroup",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnDataGroup.js",
            "line": 28,
            "description": "Array of columns. Each element is an object which will be passed to ColumnData.ColumnData.create.",
            "itemtype": "property",
            "name": "columns",
            "type": "Array",
            "class": "ColumnData.ColumnDataGroup",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnDataGroup.js",
            "line": 36,
            "description": "Meta data used by list-group module. Passed as an object while creating.",
            "itemtype": "property",
            "name": "list",
            "type": "Class",
            "class": "ColumnData.ColumnDataGroup",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnDataGroup.js",
            "line": 44,
            "description": "Meta data used by tree module. Passed as an object while creating.",
            "itemtype": "property",
            "name": "tree",
            "type": "Class",
            "class": "ColumnData.ColumnDataGroup",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnDataGroup.js",
            "line": 52,
            "description": "Meta data used by sortable module. Passed as an object while creating.",
            "itemtype": "property",
            "name": "sort",
            "type": "Class",
            "class": "ColumnData.ColumnDataGroup",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnDataGroup.js",
            "line": 60,
            "description": "Meta data used by panels module. Passed as an object while creating.",
            "itemtype": "property",
            "name": "panel",
            "type": "Class",
            "class": "ColumnData.ColumnDataGroup",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnDataGroup.js",
            "line": 68,
            "description": "Meta data used by lazy-display module. Passed as an object while creating.",
            "itemtype": "property",
            "name": "lazyDisplay",
            "type": "Class",
            "class": "ColumnData.ColumnDataGroup",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnDataGroup.js",
            "line": 76,
            "description": "Meta data used by form module. Passed as an object while creating.",
            "itemtype": "property",
            "name": "form",
            "type": "Class",
            "class": "ColumnData.ColumnDataGroup",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnDataGroup.js",
            "line": 84,
            "description": "Meta data used by model module. Passed as an object while creating.",
            "itemtype": "property",
            "name": "model",
            "type": "Class",
            "class": "ColumnData.ColumnDataGroup",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnListenerEntry.js",
            "line": 11,
            "description": "A name to uniquely identify column data.",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "ColumnListenerEntry",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnListenerEntry.js",
            "line": 19,
            "description": "Key name of the attribute in the record. If not provided, 'name' is used a key.",
            "itemtype": "property",
            "name": "keyName",
            "type": "String",
            "class": "ColumnListenerEntry",
            "module": "column-data"
        },
        {
            "file": "src/js/column-data/columnListenerEntry.js",
            "line": 27,
            "description": "Key of the attribute based on keyName or name if keyName is not provided.",
            "itemtype": "property",
            "name": "key",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "ColumnListenerEntry",
            "module": "column-data"
        },
        {
            "file": "src/js/crud-adapter/applicationAdapter.js",
            "line": 20,
            "description": "Additional end point to add based on the call type.",
            "itemtype": "property",
            "name": "END_POINT_MAP",
            "class": "APIConfig",
            "module": "column-data"
        },
        {
            "file": "src/js/crud-adapter/applicationAdapter.js",
            "line": 34,
            "description": "Enable additional end point appending.",
            "itemtype": "property",
            "name": "ENABLE_END_POINT",
            "default": "0",
            "class": "APIConfig",
            "module": "column-data"
        },
        {
            "file": "src/js/crud-adapter/applicationAdapter.js",
            "line": 43,
            "description": "Boolean to eable appending of id based on call type.",
            "itemtype": "property",
            "name": "APPEND_ID_MAP",
            "class": "APIConfig",
            "module": "column-data"
        },
        {
            "file": "src/js/crud-adapter/applicationAdapter.js",
            "line": 57,
            "description": "Enable appending of id.",
            "itemtype": "property",
            "name": "APPEND_ID",
            "default": "1",
            "class": "APIConfig",
            "module": "column-data"
        },
        {
            "file": "src/js/crud-adapter/applicationAdapter.js",
            "line": 66,
            "description": "http(s) method based on call type.",
            "itemtype": "property",
            "name": "HTTP_METHOD_MAP",
            "class": "APIConfig",
            "module": "column-data"
        },
        {
            "file": "src/js/crud-adapter/applicationAdapter.js",
            "line": 80,
            "description": "Base for the api.",
            "itemtype": "property",
            "name": "API_BASE",
            "class": "APIConfig",
            "module": "column-data"
        },
        {
            "file": "src/js/crud-adapter/backupData.js",
            "line": 8,
            "description": "Method to backup data for a record if server doesnt return the full data.",
            "itemtype": "method",
            "name": "backupData",
            "params": [
                {
                    "name": "record",
                    "description": "",
                    "type": "Instance"
                },
                {
                    "name": "type",
                    "description": "Model class for the record.",
                    "type": "Class"
                },
                {
                    "name": "operation",
                    "description": "Operation when the backup was called.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Backedup data.",
                "type": "Object"
            },
            "class": "CrudAdaptor",
            "module": "column-data"
        },
        {
            "file": "src/js/crud-adapter/createRecordWrapper.js",
            "line": 6,
            "description": "Wrapper to create record.",
            "itemtype": "method",
            "name": "createRecordWrapper",
            "params": [
                {
                    "name": "store",
                    "description": "",
                    "type": "Instance"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "Class|String"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "CrudAdapter",
            "module": "column-data"
        },
        {
            "file": "src/js/crud-adapter/delayedAddToHasManyMixin.js",
            "line": 47,
            "description": "Method to add a property after the array prop loads.",
            "itemtype": "property",
            "name": "addToProp",
            "class": "CrudAdapter",
            "module": "column-data",
            "subprops": [
                {
                    "name": "prop",
                    "description": "Property of array to add to.",
                    "type": "String"
                },
                {
                    "name": "propObj",
                    "description": "Object to add to array.",
                    "type": "Instance"
                }
            ]
        },
        {
            "file": "src/js/crud-adapter/delayedAddToHasManyMixin.js",
            "line": 92,
            "description": "Properties that are hasMany relations.",
            "itemtype": "property",
            "name": "arrayProps",
            "type": "Array",
            "class": "CrudAdapter",
            "module": "column-data"
        },
        {
            "file": "src/js/crud-adapter/forceReload.js",
            "line": 8,
            "description": "Method to reload a record.",
            "itemtype": "method",
            "name": "forceReload",
            "params": [
                {
                    "name": "store",
                    "description": "Store to reload from.",
                    "type": "Instance"
                },
                {
                    "name": "type",
                    "description": "Type of the record to reload.",
                    "type": "Class"
                },
                {
                    "name": "id",
                    "description": "Id of the record to reload.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Reloaded record.",
                "type": "Instance"
            },
            "class": "CrudAdapter",
            "module": "column-data"
        },
        {
            "file": "src/js/crud-adapter/getId.js",
            "line": 6,
            "description": "Method to get id from a record/object for a type.",
            "itemtype": "method",
            "name": "getId",
            "params": [
                {
                    "name": "record",
                    "description": "Record/Object to get id from.",
                    "type": "Instance|Object"
                },
                {
                    "name": "type",
                    "description": "Model for the Record/Object.",
                    "type": "Class"
                }
            ],
            "return": {
                "description": "Id of the record/object.",
                "type": "String"
            },
            "class": "CrudAdapter",
            "module": "column-data"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 66,
            "description": "Boolean to denote validation failure. Poppulated by form module.",
            "itemtype": "property",
            "name": "validationFailed",
            "type": "Boolean",
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 75,
            "description": "Bubbled isLoading boolean from child records.",
            "itemtype": "property",
            "name": "isLoading_alias",
            "type": "Boolean",
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 83,
            "description": "Bubbled isReloading boolean from child records.",
            "itemtype": "property",
            "name": "isReloading_alias",
            "type": "Boolean",
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 91,
            "description": "Bubbled isSaving boolean from child records.",
            "itemtype": "property",
            "name": "isSaving_alias",
            "type": "Boolean",
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 99,
            "description": "Bubbled isDirty boolean from child records.",
            "itemtype": "property",
            "name": "isDirty_alias",
            "type": "Boolean",
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 108,
            "description": "Boolean to denote disabling of save based on isDirty_alias, validationFailed, isLoading_alias, isReloading_alias, isSaving_alias.",
            "itemtype": "property",
            "name": "disableSave",
            "type": "Boolean",
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 118,
            "description": "Array of primary keys for the model. The values of these keys will be joined with '__' and will be assigned to 'id'.",
            "itemtype": "property",
            "name": "keys",
            "type": "Array",
            "static": 1,
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 128,
            "description": "API end point on server for transactions for this model.",
            "itemtype": "property",
            "name": "apiName",
            "type": "String",
            "default": "\"data/generic\"",
            "static": 1,
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 140,
            "description": "Keys needed to make delete calls. These values will be taken from either the record or 'CrudAdapter.GlobalData'",
            "itemtype": "property",
            "name": "deleteParams",
            "type": "Array",
            "static": 1,
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 150,
            "description": "Keys needed to make find calls. These values will be taken from either the record or 'CrudAdapter.GlobalData'",
            "itemtype": "property",
            "name": "findParams",
            "type": "Array",
            "static": 1,
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 160,
            "description": "Keys for extra attributes to be passed along with record attrs during create/update call. These values will be taken from either the record or 'CrudAdapter.GlobalData'",
            "itemtype": "property",
            "name": "createUpdateParams",
            "type": "Array",
            "static": 1,
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 170,
            "description": "Keys from record to be deleted when making create/update call.",
            "itemtype": "property",
            "name": "ignoreFieldsOnCreateUpdate",
            "type": "Array",
            "static": 1,
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 180,
            "description": "Keys from backup data to be deleted when data is recieved from server after a create/update call.",
            "itemtype": "property",
            "name": "ignoreFieldsOnRetrieveBackup",
            "type": "Array",
            "static": 1,
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 190,
            "description": "Keys from record data to be deleted when data is being backed up during a find call.",
            "itemtype": "property",
            "name": "removeAttrsFromBackupOnFind",
            "type": "Array",
            "static": 1,
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 200,
            "description": "Retain id when backing up data.",
            "itemtype": "property",
            "name": "retainId",
            "type": "Boolean",
            "default": "false",
            "static": 1,
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 212,
            "description": "Use id from record while backing up (default is to use \"new\" when creating record and id when updating). Used when records are child records and are not saved directly, in which case the child records must have an id and should be used when backing up.",
            "itemtype": "property",
            "name": "useIdForBackup",
            "type": "Boolean",
            "default": "false",
            "static": 1,
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 224,
            "description": "Attribute that will be paginated. Applies during findNext calls.",
            "itemtype": "property",
            "name": "paginatedAttribute",
            "type": "String",
            "default": "\"id\"",
            "static": 1,
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 236,
            "description": "Callback called when normalizing record. Will be called twice. Once before serializeRelations is called another by ember-data to normalize payload.",
            "itemtype": "property",
            "name": "normalizeFunction",
            "type": "Function",
            "static": 1,
            "class": "ModelWrapper",
            "module": "crud-adapter",
            "subprops": [
                {
                    "name": "hash",
                    "description": "JSON object of the data returned from server.",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 248,
            "description": "Callback called before serializing child records.",
            "itemtype": "property",
            "name": "preSerializeRelations",
            "type": "Function",
            "static": 1,
            "class": "ModelWrapper",
            "module": "crud-adapter",
            "subprops": [
                {
                    "name": "data",
                    "description": "JSON object of the data returned from server.",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 260,
            "description": "Callback called for serializing data being sent to server.",
            "itemtype": "property",
            "name": "serializeFunction",
            "type": "Function",
            "static": 1,
            "class": "ModelWrapper",
            "module": "crud-adapter",
            "subprops": [
                {
                    "name": "record",
                    "description": "Record being sent to server.",
                    "type": "Class",
                    "optional": true
                },
                {
                    "name": "json",
                    "description": "JSON object of the data to be sent to server.",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 273,
            "description": "Callback called after backing up data.",
            "itemtype": "property",
            "name": "backupData",
            "type": "Function",
            "static": 1,
            "class": "ModelWrapper",
            "module": "crud-adapter",
            "subprops": [
                {
                    "name": "record",
                    "description": "Record being backed up.",
                    "type": "Class",
                    "optional": true
                },
                {
                    "name": "type",
                    "description": "Record type.",
                    "type": "String|Class",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "JSON object being backed up.",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 287,
            "description": "Callback called after retrieving backup data.",
            "itemtype": "property",
            "name": "retrieveBackup",
            "type": "Function",
            "static": 1,
            "class": "ModelWrapper",
            "module": "crud-adapter",
            "subprops": [
                {
                    "name": "hash",
                    "description": "JSON object returned by server.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "type",
                    "description": "Record type.",
                    "type": "String|Class",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "JSON object stored in backup.",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        {
            "file": "src/js/crud-adapter/model-wrapper.js",
            "line": 302,
            "description": "Function that returns an ember data model.",
            "itemtype": "method",
            "name": "createModelWrapper",
            "fro": "CrudAdapter",
            "params": [
                {
                    "name": "object",
                    "description": "JSON that are member attributes.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "config",
                    "description": "JSON that are static attributes.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "mixins",
                    "description": "Array of mixins to include.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "class": "ModelWrapper",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/retrieveBackup.js",
            "line": 9,
            "description": "Method to retrieve backed up data for a record when server doesnt return the full data.",
            "itemtype": "method",
            "name": "retrieveBackup",
            "params": [
                {
                    "name": "hash",
                    "description": "Data returned by server.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "Model class for the record.",
                    "type": "Class"
                },
                {
                    "name": "hasId",
                    "description": "Boolean to denote that the record has id.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Retrieved data.",
                "type": "Object"
            },
            "class": "CrudAdaptor",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/retrieveFailure.js",
            "line": 12,
            "description": "Method to retrieve record from failure.",
            "itemtype": "method",
            "name": "retrieveFailure",
            "params": [
                {
                    "name": "record",
                    "description": "",
                    "type": "Instance"
                }
            ],
            "class": "CrudAdapter",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/rollbackRecord.js",
            "line": 6,
            "description": "Wrapper method to rollback a record.",
            "itemtype": "method",
            "name": "rollbackRecord",
            "params": [
                {
                    "name": "record",
                    "description": "",
                    "type": "Instance"
                }
            ],
            "class": "CrudAdapter",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/crud-adapter/saveRecord.js",
            "line": 16,
            "description": "Wrapper to save record.",
            "itemtype": "method",
            "name": "saveRecord",
            "params": [
                {
                    "name": "record",
                    "description": "",
                    "type": "Instance"
                },
                {
                    "name": "type",
                    "description": "Model class of the record",
                    "type": "Class|String"
                }
            ],
            "class": "CrudAdapter",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/drag-drop/drag-drop-column-data-interface.js",
            "line": 7,
            "class": "DragDrop.DraggableMixin",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/drag-drop/draggableMixin.js",
            "line": 31,
            "description": "A callback method that is called when a drag starts.",
            "itemtype": "method",
            "name": "dragStartCallback",
            "params": [
                {
                    "name": "event",
                    "description": "The event object of the dragStart event.",
                    "type": "Object"
                }
            ],
            "class": "DragDrop.DraggableMixin",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/drag-drop/draggableMixin.js",
            "line": 40,
            "description": "Targets that are allowed to be dropped on. Can be a selector or an array of selectors.",
            "itemtype": "property",
            "name": "allowedDropTargets",
            "type": "String|Array",
            "default": "'.dragdrop-droppable'",
            "class": "DragDrop.DraggableMixin",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/drag-drop/droppableMixin.js",
            "line": 67,
            "description": "A callback method that is called when the view being dragged enters this view.",
            "itemtype": "method",
            "name": "dragEnterCallback",
            "params": [
                {
                    "name": "event",
                    "description": "The event object of the dragStart event.",
                    "type": "Object"
                },
                {
                    "name": "dragView",
                    "description": "The view being dragged.",
                    "type": "Class"
                },
                {
                    "name": "dragEle",
                    "description": "The element being dragged.",
                    "type": "Class"
                },
                {
                    "name": "dropView",
                    "description": "The view being dropped on.",
                    "type": "Class"
                },
                {
                    "name": "dropEle",
                    "description": "The element being dropped on.",
                    "type": "Class"
                }
            ],
            "class": "DragDrop.DroppableMixin",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/drag-drop/droppableMixin.js",
            "line": 80,
            "description": "A callback method that is called when the view being dragged is over this view.",
            "itemtype": "method",
            "name": "dragOverCallback",
            "params": [
                {
                    "name": "event",
                    "description": "The event object of the dragStart event.",
                    "type": "Object"
                },
                {
                    "name": "dragView",
                    "description": "The view being dragged.",
                    "type": "Class"
                },
                {
                    "name": "dragEle",
                    "description": "The element being dragged.",
                    "type": "Class"
                },
                {
                    "name": "dropView",
                    "description": "The view being dropped on.",
                    "type": "Class"
                },
                {
                    "name": "dropEle",
                    "description": "The element being dropped on.",
                    "type": "Class"
                }
            ],
            "class": "DragDrop.DroppableMixin",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/drag-drop/droppableMixin.js",
            "line": 93,
            "description": "A callback method that is called when the view being dragged leaves this view.",
            "itemtype": "method",
            "name": "dragLeaveCallback",
            "params": [
                {
                    "name": "event",
                    "description": "The event object of the dragStart event.",
                    "type": "Object"
                },
                {
                    "name": "dragView",
                    "description": "The view being dragged.",
                    "type": "Class"
                },
                {
                    "name": "dragEle",
                    "description": "The element being dragged.",
                    "type": "Class"
                },
                {
                    "name": "dropView",
                    "description": "The view being dropped on.",
                    "type": "Class"
                },
                {
                    "name": "dropEle",
                    "description": "The element being dropped on.",
                    "type": "Class"
                }
            ],
            "class": "DragDrop.DroppableMixin",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/drag-drop/droppableMixin.js",
            "line": 106,
            "description": "A callback method that is called when the view being dragged is dropped on this view.",
            "itemtype": "method",
            "name": "dropCallback",
            "params": [
                {
                    "name": "event",
                    "description": "The event object of the dragStart event.",
                    "type": "Object"
                },
                {
                    "name": "dragView",
                    "description": "The view being dragged.",
                    "type": "Class"
                },
                {
                    "name": "dragEle",
                    "description": "The element being dragged.",
                    "type": "Class"
                },
                {
                    "name": "dropView",
                    "description": "The view being dropped on.",
                    "type": "Class"
                },
                {
                    "name": "dropEle",
                    "description": "The element being dropped on.",
                    "type": "Class"
                }
            ],
            "class": "DragDrop.DroppableMixin",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/drag-drop/droppableMixin.js",
            "line": 119,
            "description": "Accept drops from elements passing the selectors. Can be a single selectors or an array of it.",
            "itemtype": "property",
            "name": "acceptDropFrom",
            "type": "String|Array",
            "default": "'.dragdrop-draggable'",
            "class": "DragDrop.DroppableMixin",
            "module": "crud-adapter"
        },
        {
            "file": "src/js/global-module/global-module-column-data/displayTextCollapsibleGlypiconColumnDataMixin.js",
            "line": 19,
            "description": "Glypicon class when open.",
            "itemtype": "property",
            "name": "glyphiconOpened",
            "type": "String",
            "default": "\"glyphicon-chevron-down\"",
            "class": "GlobalModules.DisplayTextCollapsibleGlypiconColumnDataMixin",
            "module": "global-module",
            "submodule": "global-module-column-data"
        },
        {
            "file": "src/js/global-module/global-module-column-data/displayTextCollapsibleGlypiconColumnDataMixin.js",
            "line": 28,
            "description": "Glypicon class when collapsed.",
            "itemtype": "property",
            "name": "glyphiconCollapsed",
            "type": "String",
            "default": "\"glyphicon-chevron-down\"",
            "class": "GlobalModules.DisplayTextCollapsibleGlypiconColumnDataMixin",
            "module": "global-module",
            "submodule": "global-module-column-data"
        },
        {
            "file": "src/js/global-module/global-module-column-data/displayTextColumnDataMixin.js",
            "line": 18,
            "description": "Class names to use for the module.",
            "itemtype": "property",
            "name": "classNames",
            "type": "String",
            "class": "GlobalModules.DisplayTextColumnDataMixin",
            "module": "global-module",
            "submodule": "global-module-column-data"
        },
        {
            "file": "src/js/global-module/global-module-column-data/displayTextColumnDataMixin.js",
            "line": 26,
            "description": "Tag name used by the module.",
            "itemtype": "property",
            "name": "tagName",
            "type": "String",
            "default": "\"div\"",
            "class": "GlobalModules.DisplayTextColumnDataMixin",
            "module": "global-module",
            "submodule": "global-module-column-data"
        },
        {
            "file": "src/js/global-module/global-module-column-data/displayTextWithTooltipColumnDataMixin.js",
            "line": 19,
            "description": "Static tooltip for the module.",
            "itemtype": "property",
            "name": "tooltip",
            "type": "String",
            "class": "GlobalModules.DisplayTextWithTooltipColumnDataMixin",
            "module": "global-module",
            "submodule": "global-module-column-data"
        },
        {
            "file": "src/js/global-module/global-module-column-data/displayTextWithTooltipColumnDataMixin.js",
            "line": 27,
            "description": "Key to the value on the record for dynamic tooltip.",
            "itemtype": "property",
            "name": "tooltipKey",
            "type": "String",
            "class": "GlobalModules.DisplayTextWithTooltipColumnDataMixin",
            "module": "global-module",
            "submodule": "global-module-column-data"
        },
        {
            "file": "src/js/global-module/global-module-column-data/globalModuleColumnDataGroupMixin.js",
            "line": 24,
            "description": "The type of base module.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "GlobalModules.GlobalModuleColumnDataGroupMixin",
            "module": "global-module",
            "submodule": "global-module-column-data"
        },
        {
            "file": "src/js/global-module/global-module-column-data/globalModuleColumnDataGroupMixin.js",
            "line": 32,
            "description": "The view type of base module.",
            "itemtype": "property",
            "name": "viewType",
            "type": "String",
            "default": "\"base\"",
            "class": "GlobalModules.GlobalModuleColumnDataGroupMixin",
            "module": "global-module",
            "submodule": "global-module-column-data"
        },
        {
            "file": "src/js/global-module/global-module-column-data/globalModuleColumnDataGroupMixin.js",
            "line": 41,
            "description": "Lookup map for the base module type to view's path.",
            "itemtype": "property",
            "name": "modules",
            "type": "Array",
            "class": "GlobalModules.GlobalModuleColumnDataGroupMixin",
            "module": "global-module",
            "submodule": "global-module-column-data"
        },
        {
            "file": "src/js/global-module/global-module-column-data/globalModuleColumnDataGroupMixin.js",
            "line": 55,
            "description": "Modules base module supports.",
            "itemtype": "property",
            "name": "modules",
            "type": "Array",
            "class": "GlobalModules.GlobalModuleColumnDataGroupMixin",
            "module": "global-module",
            "submodule": "global-module-column-data"
        },
        {
            "file": "src/js/global-module/global-module-view/displayTextView.js",
            "line": 15,
            "description": "Key for the configurations on columnData.",
            "itemtype": "property",
            "name": "columnDataKey",
            "type": "String",
            "class": "GlobalModules.DisplayTextView",
            "module": "global-module",
            "submodule": "global-module-view"
        },
        {
            "file": "src/js/lazy-display/lazyDisplayColumnDataGroup.js",
            "line": 12,
            "description": "Value to get from for passing values.",
            "itemtype": "property",
            "name": "srcObj",
            "type": "String|Instance",
            "class": "LazyDisplay.PassValueObject",
            "module": "global-module"
        },
        {
            "file": "src/js/lazy-display/lazyDisplayColumnDataGroup.js",
            "line": 20,
            "description": "Key within the srcObj to get value from.",
            "itemtype": "property",
            "name": "srcKey",
            "type": "String",
            "class": "LazyDisplay.PassValueObject",
            "module": "global-module"
        },
        {
            "file": "src/js/lazy-display/lazyDisplayColumnDataGroup.js",
            "line": 28,
            "description": "Key in the main view to put value to.",
            "itemtype": "property",
            "name": "tarKey",
            "type": "String",
            "class": "LazyDisplay.PassValueObject",
            "module": "global-module"
        },
        {
            "file": "src/js/lazy-display/lazyDisplayColumnDataGroup.js",
            "line": 43,
            "description": "Height of each row.",
            "itemtype": "property",
            "name": "rowHeight",
            "type": "Number",
            "default": "50",
            "class": "LazyDisplay.LazyDisplayColumnDataGroup",
            "module": "global-module"
        },
        {
            "file": "src/js/lazy-display/lazyDisplayColumnDataGroup.js",
            "line": 52,
            "description": "Number of extra rows to load past the area of view.",
            "itemtype": "property",
            "name": "rowBuffer",
            "type": "Number",
            "default": "50",
            "class": "LazyDisplay.LazyDisplayColumnDataGroup",
            "module": "global-module"
        },
        {
            "file": "src/js/lazy-display/lazyDisplayColumnDataGroup.js",
            "line": 61,
            "description": "Timeout after which the async-que job to load views past the area of view.",
            "itemtype": "property",
            "name": "rowLoadDelay",
            "type": "Number",
            "default": "150",
            "class": "LazyDisplay.LazyDisplayColumnDataGroup",
            "module": "global-module"
        },
        {
            "file": "src/js/lazy-display/lazyDisplayColumnDataGroup.js",
            "line": 70,
            "description": "Array of values to pass to the main view.",
            "itemtype": "property",
            "name": "passValues",
            "type": "Array",
            "class": "LazyDisplay.LazyDisplayColumnDataGroup",
            "module": "global-module"
        },
        {
            "file": "src/js/lazy-display/lazyDisplayColumnDataGroup.js",
            "line": 78,
            "description": "View for the lazy display main which has the rows.",
            "itemtype": "property",
            "name": "lazyDisplayMainClass",
            "type": "String|Class",
            "class": "LazyDisplay.LazyDisplayColumnDataGroup",
            "module": "global-module"
        },
        {
            "file": "src/js/lazy-display/lazyDisplayColumnDataGroup.js",
            "line": 86,
            "description": "Addtional class name for the lazyDisplayHeightWrapper view.",
            "itemtype": "property",
            "name": "lazyDisplayHeightWrapperClasses",
            "type": "Array",
            "class": "LazyDisplay.LazyDisplayColumnDataGroup",
            "module": "global-module"
        },
        {
            "file": "src/js/lazy-display/lazyDisplayColumnDataGroup.js",
            "line": 94,
            "description": "View for the lazy display main which has the rows.",
            "itemtype": "property",
            "name": "lazyDisplayScrollViewClasses",
            "type": "Array",
            "class": "LazyDisplay.LazyDisplayColumnDataGroup",
            "module": "global-module"
        },
        {
            "file": "src/js/lazy-display/lazyDisplayView.js",
            "line": 24,
            "description": "The rows to be displayed lazily.",
            "itemtype": "property",
            "name": "rows",
            "type": "Array",
            "class": "LazyDisplay.LazyDisplayView",
            "module": "global-module"
        },
        {
            "file": "src/js/lazy-display/lazyDisplayView.js",
            "line": 35,
            "description": "The column data group which will serve as a config for lazy display.",
            "itemtype": "property",
            "name": "rows",
            "type": "Array",
            "class": "LazyDisplay.LazyDisplayView",
            "module": "global-module"
        },
        {
            "file": "src/js/list-group/list-column-data/listColumnData.js",
            "line": 13,
            "description": "Used to determine the type of the module.",
            "itemtype": "property",
            "name": "moduleType",
            "type": "String",
            "class": "ListGroup.ListColumnData",
            "module": "list-group",
            "submodule": "list-column-data"
        },
        {
            "file": "src/js/list-group/list-column-data/listColumnDataGroup.js",
            "line": 19,
            "description": "Type of title view.",
            "itemtype": "property",
            "name": "titleType",
            "type": "String",
            "default": "\"displayText\"",
            "class": "ListGroup.ListColumnDataGroup",
            "module": "list-group",
            "submodule": "list-column-data"
        },
        {
            "file": "src/js/list-group/list-column-data/listColumnDataGroup.js",
            "line": 28,
            "description": "Type of right block view.",
            "itemtype": "property",
            "name": "rightBlockType",
            "type": "String",
            "default": "\"displayText\"",
            "class": "ListGroup.ListColumnDataGroup",
            "module": "list-group",
            "submodule": "list-column-data"
        },
        {
            "file": "src/js/list-group/list-column-data/listColumnDataGroup.js",
            "line": 37,
            "description": "Type of desc view.",
            "itemtype": "property",
            "name": "descType",
            "type": "String",
            "default": "\"displayText\"",
            "class": "ListGroup.ListColumnDataGroup",
            "module": "list-group",
            "submodule": "list-column-data"
        },
        {
            "file": "src/js/list-group/list-item/listItemView.js",
            "line": 13,
            "description": "The record that holds all the data.",
            "itemtype": "property",
            "name": "record",
            "type": "Class",
            "class": "ListGroup.ListItemView",
            "module": "list-group",
            "submodule": "list-item"
        },
        {
            "file": "src/js/list-group/list-item/listItemView.js",
            "line": 21,
            "description": "Associated column data group to customize the view.",
            "itemtype": "property",
            "name": "columnDataGroup",
            "type": "Class",
            "class": "ListGroup.ListItemView",
            "module": "list-group",
            "submodule": "list-item"
        },
        {
            "file": "src/js/list-group/listGroupView.js",
            "line": 11,
            "description": "The list of records.",
            "itemtype": "property",
            "name": "list",
            "type": "Array",
            "class": "ListGroup.ListGroupView",
            "module": "list-group"
        },
        {
            "file": "src/js/list-group/listGroupView.js",
            "line": 19,
            "description": "Associated column data group to customize the view.",
            "itemtype": "property",
            "name": "columnDataGroup",
            "type": "Class",
            "class": "ListGroup.ListGroupView",
            "module": "list-group"
        },
        {
            "file": "src/js/misc/alerts.js",
            "line": 45,
            "description": "Type of alert message. Possible values are \"success\", \"warning\", \"info\", \"error\"",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "\"error\"",
            "class": "Alerts.AlertMessageComponent",
            "module": "alerts"
        },
        {
            "file": "src/js/misc/alerts.js",
            "line": 54,
            "description": "Title of the alert message.",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "class": "Alerts.AlertMessageComponent",
            "module": "alerts"
        },
        {
            "file": "src/js/misc/alerts.js",
            "line": 62,
            "description": "Alert message.",
            "itemtype": "property",
            "name": "message",
            "type": "String",
            "class": "Alerts.AlertMessageComponent",
            "module": "alerts"
        },
        {
            "file": "src/js/misc/alerts.js",
            "line": 87,
            "description": "Timeout after which to collapse the alert message. 0 to disable.",
            "itemtype": "property",
            "name": "collapseTimeout",
            "type": "Number",
            "default": "0",
            "class": "Alerts.AlertMessageComponent",
            "module": "alerts"
        },
        {
            "file": "src/js/misc/popover.js",
            "line": 23,
            "description": "Property to enable animation. Can have \"true\"/\"false\".",
            "itemtype": "property",
            "name": "animation",
            "type": "String",
            "default": "\"true\"",
            "class": "Popovers.PopoverComponent",
            "module": "popover"
        },
        {
            "file": "src/js/misc/popover.js",
            "line": 32,
            "description": "Placement of the popover. Can have \"top\"/\"right\"/\"bottom\"/\"left\".",
            "itemtype": "property",
            "name": "placement",
            "type": "String",
            "default": "\"top\"",
            "class": "Popovers.PopoverComponent",
            "module": "popover"
        },
        {
            "file": "src/js/misc/popover.js",
            "line": 41,
            "description": "The trigger of the popover. Can have \"click\"/\"hover\"/\"focus\". Multiple triggers can be passed seperated with space.",
            "itemtype": "property",
            "name": "trigger",
            "type": "String",
            "default": "\"click\"",
            "class": "Popovers.PopoverComponent",
            "module": "popover"
        },
        {
            "file": "src/js/misc/popover.js",
            "line": 50,
            "description": "Title of the tooltip.",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "class": "Popovers.PopoverComponent",
            "module": "popover"
        },
        {
            "file": "src/js/misc/popover.js",
            "line": 58,
            "description": "Body of the tooltip.",
            "itemtype": "property",
            "name": "body",
            "type": "String",
            "class": "Popovers.PopoverComponent",
            "module": "popover"
        },
        {
            "file": "src/js/misc/popover.js",
            "line": 66,
            "description": "Delay to display tooltip.",
            "itemtype": "property",
            "name": "delay",
            "type": "Number",
            "default": "0",
            "class": "Popovers.PopoverComponent",
            "module": "popover"
        },
        {
            "file": "src/js/misc/progress-bars.js",
            "line": 37,
            "description": "Max value for the progress.",
            "itemtype": "property",
            "name": "maxVal",
            "type": "Number",
            "default": "100",
            "class": "ProgressBars.ProgressBar",
            "module": "progress-bar"
        },
        {
            "file": "src/js/misc/progress-bars.js",
            "line": 46,
            "description": "Min value for the progress.",
            "itemtype": "property",
            "name": "minVal",
            "type": "Number",
            "default": "0",
            "class": "ProgressBars.ProgressBar",
            "module": "progress-bar"
        },
        {
            "file": "src/js/misc/progress-bars.js",
            "line": 55,
            "description": "Cur value for the progress.",
            "itemtype": "property",
            "name": "val",
            "type": "Number",
            "default": "0",
            "class": "ProgressBars.ProgressBar",
            "module": "progress-bar"
        },
        {
            "file": "src/js/misc/progress-bars.js",
            "line": 64,
            "description": "Style of the progress bar. Can be default/success/info/error/warning.",
            "itemtype": "property",
            "name": "style",
            "type": "String",
            "default": "\"\"",
            "class": "ProgressBars.ProgressBar",
            "module": "progress-bar"
        },
        {
            "file": "src/js/misc/progress-bars.js",
            "line": 77,
            "description": "Property to enable striped progress bar.",
            "itemtype": "property",
            "name": "striped",
            "type": "Boolean",
            "default": "false",
            "class": "ProgressBars.ProgressBar",
            "module": "progress-bar"
        },
        {
            "file": "src/js/misc/progress-bars.js",
            "line": 86,
            "description": "Property to enable animated progress bar.",
            "itemtype": "property",
            "name": "striped",
            "type": "Boolean",
            "default": "false",
            "class": "ProgressBars.ProgressBar",
            "module": "progress-bar"
        },
        {
            "file": "src/js/misc/tooltips.js",
            "line": 13,
            "description": "Component for the tooltip.\nUsage:\n\n    {{#tool-tip title=\"Tooltip\"}}Heading{{/tool-tip}}",
            "class": "Modal.ModalBodyColumnDataMixin",
            "module": "tooltip"
        },
        {
            "file": "src/js/misc/tooltips.js",
            "line": 22,
            "description": "Property to enable animation. Can be \"true\"/\"false\"",
            "itemtype": "property",
            "name": "animation",
            "type": "String",
            "default": "\"true\"",
            "class": "Modal.ModalBodyColumnDataMixin",
            "module": "tooltip"
        },
        {
            "file": "src/js/misc/tooltips.js",
            "line": 31,
            "description": "Placement of the tooltip. Can be \"top\"/\"right\"/\"bottom\"/\"left\".",
            "itemtype": "property",
            "name": "placement",
            "type": "String",
            "default": "\"top\"",
            "class": "Modal.ModalBodyColumnDataMixin",
            "module": "tooltip"
        },
        {
            "file": "src/js/misc/tooltips.js",
            "line": 40,
            "description": "Title of the tooltip.",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "class": "Modal.ModalBodyColumnDataMixin",
            "module": "tooltip"
        },
        {
            "file": "src/js/misc/tooltips.js",
            "line": 48,
            "description": "Delay to display tooltip.",
            "itemtype": "property",
            "name": "delay",
            "type": "Number",
            "default": "0",
            "class": "Modal.ModalBodyColumnDataMixin",
            "module": "tooltip"
        },
        {
            "file": "src/js/modal/modal-column-data/modalColumnDataGroup.js",
            "line": 18,
            "description": "Type of title view.",
            "itemtype": "property",
            "name": "titleType",
            "type": "String",
            "default": "\"modalTitle\"",
            "class": "Modal.ModalColumnDataGroup",
            "module": "modal",
            "submodule": "modal-column-data"
        },
        {
            "file": "src/js/modal/modal-column-data/modalColumnDataGroup.js",
            "line": 27,
            "description": "Type of body view.",
            "itemtype": "property",
            "name": "bodyType",
            "type": "String",
            "default": "\"modalBody\"",
            "class": "Modal.ModalColumnDataGroup",
            "module": "modal",
            "submodule": "modal-column-data"
        },
        {
            "file": "src/js/modal/modal-column-data/modalColumnDataGroup.js",
            "line": 36,
            "description": "Type of footer view.",
            "itemtype": "property",
            "name": "footerType",
            "type": "String",
            "default": "\"modalFooter\"",
            "class": "Modal.ModalColumnDataGroup",
            "module": "modal",
            "submodule": "modal-column-data"
        },
        {
            "file": "src/js/modal/formWindowView.js",
            "line": 13,
            "description": "Callback called when save is successfull. 'callbackContext' is used as context.",
            "itemtype": "method",
            "name": "saveSuccessCallback",
            "params": [
                {
                    "name": "record",
                    "description": "",
                    "type": "Instance"
                },
                {
                    "name": "message",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Modal.FormWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/modal/formWindowView.js",
            "line": 23,
            "description": "To close on success or not.",
            "itemtype": "property",
            "name": "closeOnSuccess",
            "type": "Boolean",
            "default": "true",
            "class": "Modal.FormWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/modal/formWindowView.js",
            "line": 32,
            "description": "Callback called when save fails. 'callbackContext' is used as context.",
            "itemtype": "method",
            "name": "saveFailureCallback",
            "params": [
                {
                    "name": "record",
                    "description": "",
                    "type": "Instance"
                },
                {
                    "name": "message",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Modal.FormWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/modal/formWindowView.js",
            "line": 42,
            "description": "To close on failure or not.",
            "itemtype": "property",
            "name": "closeOnSuccess",
            "type": "Boolean",
            "default": "false",
            "class": "Modal.FormWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/modal/formWindowView.js",
            "line": 51,
            "description": "Context used to call the callbacks.",
            "itemtype": "property",
            "name": "callbackContext",
            "class": "Modal.FormWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/modal/formWindowView.js",
            "line": 58,
            "description": "Status of last operation.",
            "itemtype": "property",
            "name": "operationStatus",
            "type": "{String}",
            "access": "protected",
            "tagname": "",
            "class": "Modal.FormWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/modal/formWindowView.js",
            "line": 69,
            "description": "Callback called when form editing is cancelled. 'callbackContext' is used as context.",
            "itemtype": "method",
            "name": "postCancelCallback",
            "params": [
                {
                    "name": "record",
                    "description": "",
                    "type": "Instance"
                }
            ],
            "class": "Modal.FormWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/modal/modalWindowView.js",
            "line": 13,
            "description": "Animate modal open/close.",
            "itemtype": "property",
            "name": "animate",
            "type": "Boolean",
            "default": "true",
            "class": "Modal.ModalWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/modal/modalWindowView.js",
            "line": 32,
            "description": "Z-index of the modal window. Use this to handle stacks of modal windows.",
            "itemtype": "property",
            "name": "zIndex",
            "type": "Number",
            "default": "1000",
            "class": "Modal.ModalWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/modal/modalWindowView.js",
            "line": 41,
            "description": "Show a dark backdrop or not.",
            "itemtype": "property",
            "name": "backdrop",
            "type": "String",
            "default": "\"true\"",
            "class": "Modal.ModalWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/modal/modalWindowView.js",
            "line": 50,
            "description": "Width of the modal window.",
            "itemtype": "property",
            "name": "width",
            "type": "String",
            "default": "\"300px\"",
            "class": "Modal.ModalWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/modal/modalWindowView.js",
            "line": 79,
            "description": "Callback called when ok is pressed.",
            "itemtype": "method",
            "name": "onOk",
            "class": "Modal.ModalWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/modal/modalWindowView.js",
            "line": 86,
            "description": "Callback called when cancel is pressed.",
            "itemtype": "method",
            "name": "onCancel",
            "class": "Modal.ModalWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/modal/modalWindowView.js",
            "line": 93,
            "description": "Context to use when calling ok/cancel callbacks",
            "itemtype": "property",
            "name": "actionContext",
            "default": "{the modal view}",
            "class": "Modal.ModalWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/modal/modalWindowView.js",
            "line": 103,
            "description": "Alias to disable the ok button.",
            "itemtype": "property",
            "name": "disableAlias",
            "default": "{'record.disableSave'}",
            "class": "Modal.ModalWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/modal/modalWindowView.js",
            "line": 181,
            "description": "Callback called after the modal window is shown.",
            "itemtype": "method",
            "name": "postShowHook",
            "class": "Modal.ModalWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/modal/modalWindowView.js",
            "line": 189,
            "description": "Callback called after the modal window is hidden.",
            "itemtype": "method",
            "name": "postHideHook",
            "class": "Modal.ModalWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/modal/modalWindowView.js",
            "line": 199,
            "description": "Static method to show a modal widnow using a selector.",
            "itemtype": "method",
            "name": "showModalWindow",
            "static": 1,
            "params": [
                {
                    "name": "modalSelector",
                    "description": "Selector to select the modal window.",
                    "type": "String"
                },
                {
                    "name": "hide",
                    "description": "Pass this to hide the window.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "A promise that will resolve after the widnow is shown.",
                "type": "Promise"
            },
            "class": "Modal.ModalWindowView",
            "module": "modal"
        },
        {
            "file": "src/js/panels/panel-column-data/panelColumnData.js",
            "line": 15,
            "description": "Used to determine the type of the module.",
            "itemtype": "property",
            "name": "moduleType",
            "type": "String",
            "class": "PanelGroup.PanelColumnData",
            "module": "panels",
            "submodule": "panel-column-data"
        },
        {
            "file": "src/js/panels/panel-column-data/panelColumnDataGroup.js",
            "line": 19,
            "description": "Type of heading view.",
            "itemtype": "property",
            "name": "headingType",
            "type": "String",
            "default": "\"displayText\"",
            "class": "Panels.PanelColumnDataGroup",
            "module": "panels",
            "submodule": "panel-column-data"
        },
        {
            "file": "src/js/panels/panel-column-data/panelColumnDataGroup.js",
            "line": 28,
            "description": "Type of body view.",
            "itemtype": "property",
            "name": "bodyType",
            "type": "String",
            "default": "\"displayText\"",
            "class": "Panels.PanelColumnDataGroup",
            "module": "panels",
            "submodule": "panel-column-data"
        },
        {
            "file": "src/js/panels/panel-column-data/panelColumnDataGroup.js",
            "line": 37,
            "description": "Type of footer view.",
            "itemtype": "property",
            "name": "footerType",
            "type": "String",
            "class": "Panels.PanelColumnDataGroup",
            "module": "panels",
            "submodule": "panel-column-data"
        },
        {
            "file": "src/js/panels/panel-views/panelView.js",
            "line": 13,
            "description": "The record that holds all the data.",
            "itemtype": "property",
            "name": "record",
            "type": "Class",
            "class": "Panels.PanelView",
            "module": "panels",
            "submodule": "panel-views"
        },
        {
            "file": "src/js/panels/panel-views/panelView.js",
            "line": 21,
            "description": "Associated column data group to customize the view.",
            "itemtype": "property",
            "name": "columnDataGroup",
            "type": "Class",
            "class": "Panels.PanelView",
            "module": "panels",
            "submodule": "panel-views"
        },
        {
            "file": "src/js/panels/panelsView.js",
            "line": 11,
            "description": "The list of records.",
            "itemtype": "property",
            "name": "panels",
            "type": "Array",
            "class": "Panels.PanelsView",
            "module": "panels"
        },
        {
            "file": "src/js/panels/panelsView.js",
            "line": 19,
            "description": "Associated column data group to customize the view.",
            "itemtype": "property",
            "name": "columnDataGroup",
            "type": "Class",
            "class": "Panels.PanelsView",
            "module": "panels"
        },
        {
            "file": "src/js/timer/asyncQue.js",
            "line": 33,
            "description": "native timer",
            "itemtype": "property",
            "name": "timer",
            "type": "Number",
            "class": "AsyncQue",
            "module": "panels"
        },
        {
            "file": "src/js/timer/asyncQue.js",
            "line": 42,
            "description": "unique identifier for the associated task",
            "itemtype": "property",
            "name": "key",
            "type": "String",
            "class": "AsyncQue",
            "module": "panels"
        },
        {
            "file": "src/js/timer/asyncQue.js",
            "line": 50,
            "description": "resolve function of the associated promise",
            "itemtype": "property",
            "name": "resolve",
            "type": "Function",
            "class": "AsyncQue",
            "module": "panels"
        },
        {
            "file": "src/js/timer/asyncQue.js",
            "line": 58,
            "description": "reject function of the associated promise",
            "itemtype": "property",
            "name": "reject",
            "type": "Function",
            "class": "AsyncQue",
            "module": "panels"
        },
        {
            "file": "src/js/timer/asyncQue.js",
            "line": 66,
            "description": "boolean to indicate whether the associated promise has resolved",
            "itemtype": "property",
            "name": "resolved",
            "type": "boolean",
            "class": "AsyncQue",
            "module": "panels"
        },
        {
            "file": "src/js/timer/asyncQue.js",
            "line": 74,
            "description": "timeout after which the associated promise resolves",
            "itemtype": "property",
            "name": "reject",
            "type": "Number",
            "class": "AsyncQue",
            "module": "panels"
        },
        {
            "file": "src/js/timer/asyncQue.js",
            "line": 83,
            "description": "Public API to create a job into async que.",
            "itemtype": "method",
            "name": "addToQue",
            "return": {
                "description": "Promise created for the async-que.",
                "type": "Class"
            },
            "params": [
                {
                    "name": "key",
                    "description": "Unique identifier for the job.",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "description": "timeout after which the job should be run.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "Timer.TIMEOUT"
                }
            ],
            "class": "Timer",
            "module": "panels"
        },
        {
            "file": "src/js/timer/timer-consts.js",
            "line": 5,
            "description": "Default timeout for the asyncQue.",
            "itemtype": "property",
            "name": "TIMEOUT",
            "type": "Number",
            "default": "500",
            "static": 1,
            "class": "Timer",
            "module": "timer"
        },
        {
            "file": "src/js/timer/timer-consts.js",
            "line": 16,
            "description": "Timer ticks.",
            "itemtype": "property",
            "name": "TIMERTIMEOUT",
            "type": "Number",
            "default": "250",
            "static": 1,
            "class": "Timer",
            "module": "timer"
        },
        {
            "file": "src/js/timer/timerObj.js",
            "line": 33,
            "description": "Periodic timeout after which the job should be executed.",
            "itemtype": "property",
            "name": "timeout",
            "type": "boolean",
            "default": "Timer.TIMERTIMEOUT",
            "class": "Timer",
            "module": "timer"
        },
        {
            "file": "src/js/timer/timerObj.js",
            "line": 42,
            "description": "Number of times of Timer.TIMERTIMEOUT per period.",
            "itemtype": "property",
            "name": "ticks",
            "type": "Number",
            "default": "1",
            "access": "private",
            "tagname": "",
            "class": "Timer",
            "module": "timer"
        },
        {
            "file": "src/js/timer/timerObj.js",
            "line": 52,
            "description": "Number of times to execute the job.",
            "itemtype": "property",
            "name": "count",
            "type": "Number",
            "default": "0",
            "class": "Timer",
            "module": "timer"
        },
        {
            "file": "src/js/timer/timerObj.js",
            "line": 61,
            "description": "Callback executed every period. The job goes here.",
            "itemtype": "method",
            "name": "timerCallback",
            "class": "Timer",
            "module": "timer"
        },
        {
            "file": "src/js/timer/timerObj.js",
            "line": 70,
            "description": "Callback executed after the end of timer.",
            "itemtype": "method",
            "name": "endCallback",
            "class": "Timer",
            "module": "timer"
        },
        {
            "file": "src/js/tree/tree-column-data/treeColumnDataGroup.js",
            "line": 19,
            "description": "Type of left bar view.",
            "itemtype": "property",
            "name": "leftBarType",
            "type": "String",
            "default": "\"displayText\"",
            "class": "Tree.TreeColumnDataGroup",
            "module": "tree",
            "submodule": "tree-column-data"
        },
        {
            "file": "src/js/tree/tree-column-data/treeColumnDataGroup.js",
            "line": 28,
            "description": "Type of label view.",
            "itemtype": "property",
            "name": "labelType",
            "type": "String",
            "default": "\"displayText\"",
            "class": "Tree.TreeColumnDataGroup",
            "module": "tree",
            "submodule": "tree-column-data"
        },
        {
            "file": "src/js/tree/tree-column-data/treeColumnDataGroup.js",
            "line": 37,
            "description": "Type of node view.",
            "itemtype": "property",
            "name": "nodeType",
            "type": "String",
            "default": "\"displayText\"",
            "class": "Tree.TreeColumnDataGroup",
            "module": "tree",
            "submodule": "tree-column-data"
        },
        {
            "file": "src/js/tree/tree-nodes/nodeView.js",
            "line": 13,
            "description": "Record for the node.",
            "itemtype": "property",
            "name": "record",
            "type": "Class",
            "class": "Tree.NodeView",
            "module": "tree",
            "submodule": "tree-nodes"
        },
        {
            "file": "src/js/tree/tree-nodes/nodeView.js",
            "line": 21,
            "description": "Associated column data group to customize the view.",
            "itemtype": "property",
            "name": "columnDataGroup",
            "type": "Class",
            "class": "Tree.NodeView",
            "module": "tree",
            "submodule": "tree-nodes"
        },
        {
            "file": "src/js/tree/nodeRecordMixin.js",
            "line": 11,
            "description": "Array of children records.",
            "itemtype": "property",
            "name": "children",
            "class": "Tree.NodeRecordMixin",
            "module": "tree"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/js/array-modifier/array-modifier-groups/arrayModGroup.js:28"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/js/column-data/validations/columnDataValidation.js:45"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/js/column-data/validations/regexValidation.js:40"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/js/crud-adapter/backupData.js:8"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/js/crud-adapter/forceReload.js:8"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/js/crud-adapter/getId.js:6"
        },
        {
            "message": "unknown tag: fro",
            "line": " src/js/crud-adapter/model-wrapper.js:302"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/js/crud-adapter/retrieveBackup.js:9"
        },
        {
            "message": "unknown tag: exends",
            "line": " src/js/modal/modal-item/modalBodyView.js:6"
        },
        {
            "message": "unknown tag: exends",
            "line": " src/js/modal/modal-item/modalFooterView.js:6"
        },
        {
            "message": "unknown tag: exends",
            "line": " src/js/modal/modal-item/modalFormBodyView.js:7"
        },
        {
            "message": "unknown tag: exends",
            "line": " src/js/modal/modal-item/modalTitleView.js:6"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/js/modal/modalWindowView.js:199"
        },
        {
            "message": "Missing item type",
            "line": " src/js/drag-drop/drag-drop-column-data-interface.js:7"
        },
        {
            "message": "Missing item type\nComponent for the tooltip.\nUsage:\n\n    {{#tool-tip title=\"Tooltip\"}}Heading{{/tool-tip}}",
            "line": " src/js/misc/tooltips.js:13"
        }
    ]
}